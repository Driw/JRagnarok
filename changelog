20.11.2016 - 1.2.99
- Renomeando AbstractDAO para AbstractControl, não será mais utilizado Control e DAO.
	- A separação era feita apenas para considerar um cache porém nem tudo usa cache ou precisa.
	- Nem todos os controles foram atualizados com essa modificação.
- As operações realizadas em AccountDAO agora estão alocadas em AccountControl.

20.11.2016 - 1.2.98
- Conexões estavam sendo fechadas antes do necessário, removido condição temporariamente.
	- Agora serão removidos por ociosidade, pois o socket terá sido fechado.

20.11.2016 - 1.2.97
- ServiceLoginIpBan deve considerar o ServiceLoginLog do LoginServer.
- ServiceLoginIpBan também não estava sendo inicializado por LoginServer.

20.11.2016 - 1.2.96
- ServiceCharLogin atualizado conforme as mudanças da rev95.

20.11.2016 - 1.2.95
- Server agora registra no console caso uma nova conexão seja solicitada com servidor cheio.
- Atualizando newFileDecriptor para definir o listener antes que update possa chamar o FD.
- Ao fechar FileDescriptor não deverá ou será necessário mudar o ID do mesmo para 0.

16.11.2016 - 1.2.94
- Ao atualizar um cliente (FD) ficava preso em acknowledge por não receber pacote.
	- Para isso FileDescriptor recebe hasData para verificar se há pacote à receber.
- ServiceLoginClient.acknowledgePacket atualizado para retornar true em alguns pacotes.


10.11.2016 - 1.2.93b
- Formatação no nome dos identificadores dos pacotes.
- Novo flag para ser incorporado por FileDescriptor, FLAG_PING_SENT.
- CharServer deverá instanciar e iniciar os serviços que lhe faz parte.
- ServiceLoginServer deverá ser responsável pelos controles de LoginServer.
- Serviços de CharServer e LoginServer atualizados conforme as mudanças nos pacotes.
- Vip não estava implementando o atributo referente e char billing.

08.11.2016 - 1.2.93
- Contas agora podem ser obtidas do banco de dados através do seu ID.

08.11.2016 - 1.2.91
- Inicialização dos serviços de CharServer, solicitação de acesso com LoginServer.
- LoginSeed corrigido, first e second devem ser do tipo int ao invés de long.
- CT_NONE adicionado para ClientType não definido (será usado mais a frente).
- Envio de pacote "ping" para com CharServer, ServiceLoginClient.pingCharRequest.

08.11.2016 - 1.2.90
- Atualizando o nome da identificação dos pacotes conforme sua finalidade.
- CharConnectResponse e CharConnectReceive agora ficam em CharConnectRequest.
- Atualizando serviços de LoginServer conforme mudanças acima.

08.11.2016 - 1.2.89
- Renomeado GenericPacket para AbstractPacket.
- Novo formato de funcionamento dos pacotes tento agora AbstractReceivePacket e AbstractResponsePacket.
- ReceivePacket irá funcionar conforme AbstractReceivePacket e ResponsePacket conforme AbstractResponsePacket.

08.11.2016 - 1.2.88
- LoginService atualizado para destruir ServiceLoginAuth e ServiceLoginIpBan.
- Implementação do serviço para banimento de IPs (ServiceLoginIpBan) incluindo DAO e Control.
- Movendo alguns métodos contidos em AccountDAO para GroupDAO e forma de load modificado.
	- Será passado apenas o objeto e o ID deve ser definido antes para seguir a OO.
- Documentação feita nos controles e DAO existentes e removido throws dos controles.

08.11.2016 - 1.2.87
- Enviando ServiceLoginAuth que não foi enviado na rev86.

08.11.2016 - 1.2.86
- ServiceLoginAuth adicionado para realizar algumas operações de ServiceLoginClient.
	- ServiceLoginClient deve ser um serviço apenas para enviar pacotes ao cliente e de análise (parse).
		- dispatch ficará como acknowledgePacket e não irá tratar apenas de alguns pacotes.
		- Alguns métodos passam a se tornar públicos como keepAlive e updateClientHash.
		- Deverá realizar refuseLogin e charServerResult.
- ServiceLoginLog documentado e OnlineController renomeado para OnlineControl.

08.11.2016 - 1.2.85
- LoginCharServers renomado para CharServerList.
- Nome de identificação de alguns pacotes renomeados (removido algumas siglas).
	- Adicionando alguns identificadores que serão usados em revisões futuras, CharServer.

08.11.2016 - 1.2.84
- Servidores quando destruídos agora devem destruir o TimerSystem e FileDescriptorSystem também.
	- Nesse caso a destruição ocorre simplesmente limpando os dados desses sistemas.

07.11.2016 - 1.2.83
- Enviando arquivos para atualização do banco de dados referente a rev79.

07.11.2016 - 1.2.82
- Separando todos os tipos de pacotes para packet.receive ou packet.response.
	- Também foi renomeado alguns pacotes para ficarem com nomes mais diretos ou específicos.

03.11.2016 - 1.2.81
- Pequenas correções referentes as mudanças na rev79: AccountDAO e LoginLogControl.
- Modificando o nome de usuário para o servidor de personagem conectar-se ao servidor de acesso (rev80).

03.11.2016 - 1.2.80
- Conexão SQL agora permite definir o timezone desejado.
	- Modificando a validação de expiration e unbantime em ServiceLoginServer.
- Inicialização, limpeza e fechamento de conexão forçada para LoginCharServers em LoginServer.

03.11.2016 - 1.2.79
- Modificando a forma como a atualização/chamado dos temporizadores será feita:
	- Será repassado now (tempo do servidor) e tick (milissegundos passados).
- Ajustes para a remoção de FileDescriptor ocioso ou que foi encerrado (EOF).
- Atualizar os temporizadores agora deverá ser feito por getTimers().update.
- Timer agora poderá ser comparado a outro Timer, para ser adicionado corretamente em NodeList.
- ServiceLoginClient.requestCharConnect deve retornar boolean para fechar conexão se necessário.
- Removendo tabela login do banco de dados, dados vinculados a tabela accounts.
- Account agora será um Login, atualizando AccountDAO para que solicite os dados corretamente.

01.11.2016 - 1.2.78
- Movendo todos os serviços de login.service para login.
	- Renomeando de Login*Service para ServiceLogin* conforme ordem ortográfica.

01.11.2016 - 1.2.77
- Mudanças para Server:
	- getPort e getHost devem voltar a ser abstract, pois muda o nome da configuração entre servidores.
	- initConfigs deverá garantir a existência das configurações porém não deve carregá-las.
	- readConfigFiles adicionado para efetuar a leitura dos arquivos de configurações (padrões e privado).
- LoginServer, CharServer e MapServer atualizados para funcionar com getPort e getHost.
	- Implementação do carregamento das configurações até então existentes.

01.11.2016 - 1.2.76
- Atualizando funcionamento base de JRagnarok para criar e configurar todos os servidores encontrados.
- Pequenas correções e atualizações em Server referentes a nomes e visibilidade de métodos.
	- Também foi incluso uma constante e uso padrão para preferências ao usar ConfigReader.
- Documentando as constantes do sistema (JRagnarokConstants).
	- MAX_NAME_LENGTH foi renomado para MAX_USERNAME_LENGTH.

01.11.2016 - 1.2.75b
- Pequenas correções em valores padrões, nome das constantes e configurações iniciais, JRagnarokConfigs.

01.11.2016 - 1.2.75
- Removendo as configurações específicas padrões de ConfigTypes.
- Barras para indicar diretórios removido das configurações.
- A configuração server.folder será especificado nas configurações de cada micro servidor.
- LoginServer.conf corrigido, duas configurações não definidas e removido três não usadas.

01.11.2016 - 1.2.74
- Pequenas modificações em ConfigReader para torná-lo mais dinâmico com preferências.
- Configurations.toString deverá mostrar o nome e valor da configuração.

30.10.2016 - 1.2.73
- Modificando TimerSystem e FileDescriptor para que possam ser usados por todos os servidores.
	- Agora não usam Singleton e são instanciados dentro de um Server.
	- Toda a parte estática (exceto constantes) de FileDescriptor foram para FileDescriptorSystem.
- Adicionando métodos para obter TimerSystem e FileDescriptorSystem do servidor que pertence.
- Todos os serviços foram atualizados para que trabalhem com os sistemas de seus servidores.

30.10.2016 - 1.2.72
- Atualizando os arquivos de configurações e separando as configurações conforme esperado.

30.10.2016 - 1.2.71
- Configurations agora permite adicionar configurações de outro Configurations.
- ConfigLoad renomeado para ConfigReader para fazer jus a sua finalidade.
- Removendo toda estrutura que tornava CharServer, LoginServer e MapServer Singleton.
	- ServerListener agora fica implementado como atributo para evitar acesso por fora.
- LoginServer atualizado para a utilização de JRagnarokConfigs.

30.10.2016 - 1.2.70
- Excluindo diversas configurações que não serão mais necessárias.
- JRagnarokConfigs movido para jragnarok.configs.
	- Agora ele deverá instanciar Configurations de todos os grupos de configurações.
	- Adicionando constantes para o nome de todas as configurações existentes até o momento.

30.10.2016 - 1.2.69
- Atualizando Server para obter algumas informações de configs.
- CharConfig, LoginConfig e MapConfig agora são Configurations.
- CharServer, LoginServer e MapServer não usa mais o Singleton.
	- Será permitido criar diversos micro servidores (Server).

30.10.2016 - 1.2.68
- Config agora possui setRaw para atribuir um valor por string.
	- Cada classe deve implementar como será atribuído.
- ConfigLoad renomeado para ConfigRead e algumas pequenas melhorias.

29.10.2016 - 1.2.67
- Configurações agora serão agrupadas por Configurations.
- Config deverá especificar os tipos de configurações existentes (static).
- JRagnarok deve considerar a leitura de argumentos passados na inicialização.
	- Inicio do projeto para criação de micro servidores e independências.

29.10.2016 - 1.1.66
- Implementação do sistema para leitura de vários servidores.

29.10.2016 - 1.1.65
- Limpando strings que são recebidas de CharConnectReceive (strclr).

29.10.2016 - 1.1.64
- Novos métodos para converter valores de horas para milissegundos com ou sem minutos e segundos.
- Pequena correção no nome da configuração que deveria ser client.version, LoginClientService.
	- Também foi removido algumas condições desnecessárias em requestCharConnect.

29.10.2016 - 1.1.63
- Agora setInterval em Timer deve ser usado por TimerMap.addInterval.
- Correções para TimerMap:
	- acquireTimer deve ser um método de TimerMap.
	- add deve adicionar o temporizador como TIMER_ONCE_AUTODEL.
	- addInterval deve adicionar o temporizador como TIMER_INTERVAL.
	- setTimerExpired não precisa adicionar o temporizador.
	- delete deve remover o temporizador da lista de temporizadores.
- Atualizando todas as classes que utilizam temporizadores conforme atualizações acima.
- LoginCharacterService não era inicializado no LoginServer.
- LoginClientService atualizado conforme rev62.

29.10.2016 - 1.1.62
- Por em quanto ConfigLoad não deverá mostrar que a configuração não existe.
- Pacotes corrigidos, CharConnectRequest envia e CharConnectReceive recebe.
	- CharConnectResult deve enviar o resultado da solicitação do acesso.

27.10.2016 - 1.1.61
- Algumas documentações de classes corrigidas.
- Removido o atributo data de Timer já que não está sendo usado no momento.

27.10.2016 - 1.1.60
- Problema onde clone estava tornando configurações específicas em ConfigObject.
- ConfigClientHash e ConfigIP não aceitava o objeto direto por setObject adequadamente.

27.10.2016 - 1.1.59
- Configurações agora podem ser clonadas para facilitar o multiuso de uma configuração.
	- Assim se pode ter vários servidores usando uma configuração com valores diversificados.
- CharConfig, LoginConfig e MapConfig deverão usar clone para duplicar as configurações.
- Implementação básica para leitura das configurações em CharServer e MapServer.

25.10.2016 - 1.1.58
- Redução na complexidade ciclomática de algumas operações.

25.10.2016 - 1.1.57
- Redução na complexidade ciclomática de JRagnarokUtil.dateToVersion com PACKET_VER[].

25.10.2016 - 1.1.56
- Reconhecimento e autenticação de uma conexão solicitada por um cliente (jogador).
	- Isso inclui implementação de métodos/listeners em LoginClientService e LoginService.
- AuthResult foi movido para login.structures e CharServerType.CODE alterado de int para short.
- AccountDAO e LoginLogController atualizados conforme atualizações passadas.
- LoginLogController renomeado para LoginLogControl e AccountController para AccountControl.
- Novos controles:
	- AccountControl é intermediário na persistência de contas e cache de contas.
	- AuthControl funciona como cache para saber os clientes que já foram autenticados.
	- OnlineControl funciona como cache para identificar os clientes que estão online.

25.10.2016 - 1.0.55
- Atualizando LoginServer conforme as mudanças feitas na rev53.
- Agora LoginLogService.add poderá receber um IP como número inteiro.
- LoginCharServers deve permitir obter um elemento e saber o tamanho da coleção.

25.10.2016 - 1.0.54
- Problema onde min_group_to_connect não estava sendo carregado desde a rev44 resolvido.

25.10.2016 - 1.0.53
- JRagnarok irá tratar as exceptions que forem recebidas, as mensagens serão registradas.
- Algumas documentações adicionadas referentes as classes já existentes.
- FileDescriptor agora irá usar flag como um BitWise ao invés de FileDescriptorFlag.
- TimerListeners não será mais necessário já que todo TimerListener está em um Timer.

24.10.2016 - 1.0.52
- Atualizando LoginLogService para receber um InternetProtocol ao invés de String.
- InternetProtocol agora permite copiar os dados de um outro InternetProtocol.
- Renomeando alguns atributos de ClientCharServer (fd e ip).
- Pequenas correções em LoginSessionData.

24.10.2016 - 1.0.51
- Alguns ajustes de TimerListener que deveriam ter sido feitos na rev50.
- LoginServer não irá trabalhar com LoopList e sim com LoginCharServers.
- TimerMap.add não incluía nos listeners o listener do Timer adicionado.

24.10.2016 - 1.0.50
- TimerSystem agora irá usar TimerMap para mapear a indexar os temporizadores.
	- Tickers foi unido a TimerMap afim de seguir a OO.
- TimerListener deverá ser encarregado de saber seu próprio nome.
- Novos métodos para trabalhar com tempos em milissegundos, JRagnarokUtil.
- Nome dos atributos e definições padrões ao nome das tabelas atualizados, Tables.
- Removendo algumas constantes que não serão mais usadas em FileDescriptor.
- Atualizando listeners que usavam TimerListener para implementar getName e toString.

24.10.2016 - 1.0.49
- ClientHash atualizado para que efetua uma comparação de hash e não de objeto.
- ClientType não é a definição do idioma do cliente, aparentemente não há definições.
	- Será usado 22 como padrão, já que o cliente passou esse valor.
- LoginSeed agora irá gerar as duas seeds conforme esperado.
- Ajustando LoginSessionData conforme a OO, usando Group.

24.10.2016 - 1.0.48
- Enumeração de AccountState definido e testado, parse ajustado conforme mudanças.

24.10.2016 - 1.0.47
- Removendo estruturadas antigas das entidades, já que foram realocadas.
- LoginServer agora irá usar Login para registrar o seu acesso.
- Também foi corrigido o problema na criação dos servidos de LoginServer.
- As configurações não estavam sendo lidas corretamente em LoginServer.
- Pequenas correções de inicializações e restrições nos setters das entidades.

24.10.2016 - 1.0.46
- FileDescriptor agora permite adicionar ações para serem executados por todos fd.
	- As ações serão executadas uma única vez.
	- FileDescriptorAction será usado para que isso possa ser possível.

24.10.2016 - 1.0.45
- Problema onde ServerService causa NullPointerExceptions devido a falha de conexão com o banco de dados.
- Ajuste temporário para o problema de timezone do servidor com o banco de dados.
- Configuração de sql.legacydatetime adicionado para quando se conectar ao MySQL.

24.10.2016 - 1.0.44
- Atualizando algumas das configurações:
	- Versão do cliente de 50 para 55.
	- Renomeando min_group para min_group_to_connect.
	- Adicionando a opção de legacydatetime para conectar-se com o MySQL.
	- System.conf adicionado para configurações gerais entre os servidores.
- CharConfig e MapConfig atualizado para carregar ConfigFiles e ConfigSQL.
	- LoginConfig também passa por parte das mudanças acima.

18.10.2016 - 1.0.43
- ControllerLoginLog renomado para LoginLogController e movido para login.controllers.

18.10.2016 - 1.0.42
- Enviando entidades e classes para armazenar comandos e permissões dos grupos de jogadores.

18.10.2016 - 1.0.41
- Entidades removidas de login.services para login.entities.
- As classes de controle e DAO ficarão alocadas em login.controllers.
- Enviando entidades atualizadas conforme as mudanças já feitas no banco de dados.
- Os servidores terão DAO e Controller:
	- DAO irá trabalhar com os objetos e a conexão com o banco de dados.
	- Controller irá funcionar como cache do banco de dados.

18.10.2016 - 1.0.40
- Renomeando algumas tabelas para nomes mais adequados a suas finalidades.
- Comandos e permissões listados em um grupo sempre estarão habilidades (enabled não é necessário).
- Renomeado um atributo de accounts para ficar com cara de banco de dados e char_slots removido.

18.10.2016 - 1.0.39
- Removendo as tabelas anteriores do banco de dados, diversos problemas encontrados.

11.10.2016 - 1.0.38
- Enviando arquivo para atualizar o banco de dados SQL com as novas tabelas.
	- Também está sendo incluso a alteração de colunas de login_log.

11.10.2016 - 1.0.37
- Atualizando entidades relacionadas a uma conte de usuário.
	- Account: movendo atributos para outras classes de dependência e tipos de atributos alterados.
	- AccountGroup: dependência de Account para armazenar informações do grupo da conta.
	- Group: deverá representar um grupo de contas e suas propriedades.
	- Login: não deverá mais possuir Sex, pois isso não será definido na conta.
	- Pincode e Vip irão armazenar atributos que eram de Account respectivos a seus nomes.
- LoginClientService atualizado para funcionar com a rev36 onde FileDecriptorListener retorna booleano.
	- Corrigido ainda problema onde a senha raw era considerada como noRaw.

11.10.2016 - 1.0.36
- FileDescriptor corrigido para ser desligado do servidor adequadamente.
	- Algumas operações adicionais e lógicas corrigidas.
	- O método isConnected poderia causar um deadlock na Thread.
- FileDescriptorListener.onCall deve agora retornar um booleano.
	- Se for true significa que deverá remover o listener do FileDescriptor.

11.10.2016 - 1.0.35
- Removido um byte extra de NAME_LENGTH, PASSWORD_LENGTH e PINCODE_LENGTH por ser Java.
- Dois nóvos métodos para converter valores int em números do tipo byte e short.

11.10.2016 - 1.0.34
- Corrigindo ResponsePacket para que envie os pacotes ao cliente corretamente.
	- Os bytes não estavam indo invertidos, não eram enviados e não tinha o código do pacote.

08.10.2016 - 1.0.33
- Novo método que permite limpar uma string usando '\0' como delimitador.
	- Será usado por diversos pacotes que receber strings.
	- Todos os pacotes de Input atualizados para usar strclr.

08.10.2016 - 1.0.32
- Atualizações em FileDescriptor conforme PacketBuilder e correções:
	- O atributo flag de FileDescriptor não foi definido de forma correta.
		- São três atributos (byte) ao invés de um único atributo int.
	- PacketBuilder será usado para criar os pacotes de Input e Output.
	- Agora setFlag não será mais necessário, já que usa um FileDescriptorFlag.
	- Com PacketBuilder newInput e newOutput também não serão mais necessários.
	- Condição de validação no close e close não remove de SESSIONS.
	- Nova verificação para isConnected verificando se a sessão é válida.
- FileDescriptor.update atualizado conforme correções de flag e listener nulo.

08.10.2016 - 1.0.31
- JRagnarok atualizado para funcionar adequadamente ao atualizar Timer.
- Server.isState e construtor de InternetProtocol estavam com mal funcionamento.
- Tickers deverá sincronizar a coleção para evitar deadlock nas Threads.
- TimerSystem não irá sincronizar, não haverá necessidade.

08.10.2016 - 1.0.30
- Atualizando todos os pacotes até o momento conforme mudanças em JavaUtil rev115.
	- Essas mudanças irá permitir que os pacotes funcionem adequadamente.
	- Foi adicionado length() para definir se o pacote é estático ou dinâmico.
	- Complementando ainda os pacotes com toString afim de auxiliar no debug.

03.10.2016 - 1.0.29
- Documentação a parte para descrever os detalhes dos pacotes usados.
- RefuseLoginPacket renomado para RefuseLoginBytePacket conforme o tipo de dado.
- RefuseLoginIntPacket adicionado, funciona como RefuseLoginBytePacket porém com int.
- Adicionando AccountController para ser o controlador das contas no jogo.

07.09.2016 - 1.0.28
- Subindo atualização de algumas classes conforme rev26.
	- ClientCharServer, LoginSessionData, LoginServer, LoginCharacterService e LoginClientService.
- Novo método adicionado para LoginClientService parseRequestKey() e implementado authFailed().

07.09.2016 - 1.0.27
- Enviando InternetProtocol atualizado, faltou subir na rev26.
- ResponsePacket e ReceivePacket também faltaram ser atualizados.
- Pequenos ajustes no pacote RefuseLoginPacket e ReponseCharConnectPacket.

07.09.2016 - 1.0.26
- Documentando classes, atributos e métodos das classes que estão estabilizadas.
- TimerSystem atualizado para funcionar conforme a Orientação a Objetos.
	- Agora timers lista os temporizadores por ID e tickers ordena por tempo de expiração.
	- Para isso foi implementado uma classe para ordenar os temporizadores: Tickers.
	- Agora o tempo no servidor será trabalhado com int e não mais long.
- Corrigindo o nome de FileDecriptor que é FileDescriptor, listener corrigido também.

06.09.2016 - 1.0.25
- Especificando a Login.conf o nome de usuário e senha do servidor de acesso.
- Constante adicionada para definir o formato de datas padrão: DATE_FORMAT.
- Adicionando nova tabela usada e inicializando o nome das tabelas em Tables.
- Documentação de LoginLogService, LoginLog e ControllerLoginLog adicionada.
- Renomeando add() para insert() e correção na definição das tabelas: ControllerLoginLog.

05.09.2016 - 1.0.24
- Removendo classes Client e suas relações/filhas pois não serão mais usadas.

05.09.2016 - 1.0.23
- ConfigClientHash deverá passar a usar um ClientHashNode ao inves de Node.
- Atualizando LoginClientService, LoginCharService e LoginIpBanService.
	- Implementação de diversos métodos iniciais que serão necessários.
	- Os outros métodos serão implementados nas atualizações seguintes.
- Novo pacote para possuir todos os tipos de pacotes para comunicação cliente-servidor.

05.09.2016 - 1.0.22
- LoginServer atualizado conforme atualizações em LoginLogService.
	- Também foi adicionado a ele todos os serviços e os métodos getters.
- Adicionando LoginLog para armazenar dados de uma tabela do banco de dados.
- Será usado por LoginLogService passa a criar internamente LoginLog.
- ControllerLoginLog deverá receber LoginLog para atender como classe de controle.

05.09.2016 - 1.0.21
- Pequenos ajustes em CharServerType, ClientCharServer, ClientHash e Login.
- ClientType implementado, ainda será confirmado se estas são as verdadeiras variáveis.
- LoginSessionData passa a ser um Login, removendo alguns atributos que já possui em Login.
	- Atualizado o nome das variáveis estáticas e adicionado dois novos atributos para md5.

05.09.2016 - 1.0.20
- TimerSystem corrigido na forma como tick() deveria funcionar e adicionado novo atributo.
- ServerThread não será mais usado, o emulador não funciona com threads individuais.
	- Isso também iria resultar em um numero demasiado de threads e poderia privilegiar threads.
- Como os IPs são usados como int então InternetProtocol terá construtor por parâmetro int.
- Atualizando FileDecriptor para possuir uma lista com as instâncias internamente por static.
	- Adicionado ainda atributo para dar um timeout ao objeto para evitar ociosidade.

05.09.2016 - 1.0.19
- Pequenos ajustes em ConfigLoad e clear() deverá apenas substituir o map das configurações.
- Enviando também os arquivos contendo as mensagens dos três servidores.
	- As mensagens foram separadas em dois idiomas: português e inglês.

05.09.2016 - 1.0.18
- Sistema para leitura de arquivos com mensagens identificadas numericamente.

04.09.2016 - 1.0.17
- FileDecriptor e FileDecriptorListener adicionados.
	- Serão usados no lugar de Client e outras classes filhas.
- Server: adicionando método que permite obter o estado ou compará-lo.
	- Removido initClient, será usado um ServerThread junto de FileDecriptor.
- SocketParser agora irá receber um FileDecriptor ao invés de um Client.
- Agora get() passa a ser getString() em InternetProtocol para get() retornar int.

04.09.2016 - 1.0.16
- Subindo as constantes que não foram enviadas na rev15.
- Também está sendo adicionando alguns métodos utilitários usados ou que serão usados.

04.09.2016 - 1.0.15
- Adicionando todas as estruturas que serão usadas pelo servidor de acesso.
	- AccountState e ClientType terá suas enumerações adicionadsa em breve.

03.09.2016 - 1.0.14
- Implementação de LoginLogService com ControllerLoginLog.
- Atualizando LoginClientService conforme rev12.

03.09.2016 - 1.0.13
- Impossibilitando instâncias de:
	- JRagnarokConstants, JRagnarokLogListener e JRagnarokUtil.

03.09.2016 - 1.0.12
- AbstractController para criar todos os controles no emulador.
- ClientServer adicionado para representar os servidores.
- Pequenos ajustes entre Client, ClientPlayer e ClientCharServer.
- Server irá usar ClientPlayer ao invés de Client na Thread criada.
	- Também foi adicionado Client para os servidores entrarem no log.
- ServerService aprimorado durante o getConnection() para validar conexão.

03.09.2016 - 1.0.11
- Adicionando todos os serviços que compõe projedo do servidor de acesso.
	- Irá usar LoginServerService como base para criação dos serviços abaixo:
	- Serviços para: servidor de personagem, cliente, ip ban, log.
- LoginServer atualizado conforme os serviços adicionados.
	- Adicionando ainda alguns temporizadores e processos para iniciar.
		- A maioria ainda será implementado nas próximas revisões.

03.09.2016 - 1.0.10
- Dois tipos de clientes adicionado: ClientCharServer e ClientPlayer.
	- ClientCharServer representa os servidores de personagens disponíveis.
	- ClientPlayer um jogador que já solicitou a conexão com o servidor.	
		- Ainda há atributos para ser implementado mas será usado.
- ServerService será usado para criar os diversos serviços internos do emulador.

03.09.2016 - 1.0.9
- Removido dispatchSocket() de Server, agora irá usar uma interface SocketParser.
- Pequenos ajustes em TimerSystem para evitar NullPointerExceptions e chamados desnecessários.

02.09.2016 - 1.0.8
- JRagnarokUtil recebe um novo método que permite liberar memória de objetos não usados.
	- Utiliza o próprio Garbage Collector do java e registra uma mensagem do espaço liberado.
- InternetProtocol agora irá permitir uma nova instância de si a partir de um Socket.
- Sistema de temporizadores adicionado como TimerSystem tendo Timer como temporizador.

02.09.2016 - 1.0.7
- Problema ao usar : em uma configuração resolvido em ConfigLoad.
- Outros tipos de configurações podem ser criadas, como por exemplo ConfigIP.
	- Deve ser especificado setObject quando receber um string para funcionar.
- Configuração login.ip_sync_interval não estava com um valor definido.
- Porta de conexão agora é obtido por método para ser especificado nas configurações.
- Atualizando ServerConfig para funcionar com os tipos de configurações: ConfigObject.
- ConfigClientHash e ConfigIP adicionados para especificar configurações de objetos.
	- Respectivas classes estáticas ConfigClient e ConfigLogin atualizadas.
- Listando em LoginConfig as configurações necessárias para LoginServer funcionar.
- LoginServer agora irá ler os arquivos de configurações e assumir seus valores.

02.09.2016 - 1.0.6
- Adicionando diversas classes contendo objetos para armazenar configurações.
- JRagnarokConstants irá armazenar todas as constantes que forem necessárias de uso geral.
- LoginServer irá definir algumas das configurações padrões quando for criado.

31.08.2016 - 1.0.5
- Chamado dos métodos para funcionamento da aplicação para registrar informações (logs).
- ServerConfig irá armazenar configurações e possui método para inicializá-las, definir as existentes.
	- Para cada servidor foi criado um que segue como: LoginConfig, CharConfig e MapConfig.
- Agora Server irá possuir configurações com ServerConfig e conexão com o banco de dados por MySQL.
	- Adicionando algumas mensagens através do sistema de logs para algumas funções.
	- Separando algumas operações em create() para métodos initThread() e initSocket().
	- Novos métodos init*() adicionados para realizar outras funções:
		- Inicialização das configurações por initConfigs().
		- Inicialização da conexão com o banco de dados MySQL por initSqlConnection().
		- Inicialização do temporizador (ainda não estruturado) por initTimer().

31.08.2016 - 1.0.4
- Sistema para leitura de arquivos contendo configurações: ConfigLoad.
	- As configurações são definidas por Config e podem ser ConfigString, ConfigInt e ConfigBoolean.
- JRagnarokLogListener adicionado para repassar os registros (logs) para o console do Java.
- JRagnarokUtil irá conter diversos métodos estáticos para facilitar as codificações.

31.08.2016 - 1.0.3
- Movendo Server, ServerListener e ServerState para um sub pacote 'server'.
	- Outras classes gerais de todos os servidores serão adicionadas aqui.
	- No pacote raiz serão adicionadas classes gerais do emulador ao invés dos servidores.

28.08.2016 - 1.0.2
- Enviando estrutura básica para a criação dos três servidores com ServerSocket.
	- Foi utilizado ainda ServerListener para permitir algumas operações em determinados momentos.
	- Algumas funcionalidades e mensagens ainda deverão ser implementadas para melhor acompanhamento.