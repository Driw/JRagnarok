31.01.2017 - 1.5.207
- Não será mais utilizado getConfigs() fora da classe do servidor.
- Para suprir a mudança acima será usado LoginServerConfigs, CharServerConfigs e MapServerConfigs.
	- Classes (serviços) atualizados para que utilizem as configurações conforme mudanças.

31.01.2017 - 1.5.206
- Atualizando a importação de alguns métodos utilitários de util.Util.
	- Alguns dos métodos de JRagnarokUtil foram removidos, já que Util os possuí agora.

31.01.2017 - 1.5.205
- Melhorando a forma de acesso as configurações do jogo através de objetos que usam valores constantes.
	- Caso seja possível mudar as configurações durante o jogo será necessário um reload (new nos objetos).
	- As configurações serão definidas todas de uma só vez através do sistema atual: Configurations.

31.01.2017 - 1.5.204
- Revertendo mudanças em map_index feito na rev200, mapid e id devem se referir ao mesmo valor.

31.01.2017 - 1.5.203
- Removendo alguns códigos de pacotes (PACKET_*) por não estarem sendo usado ou implementados.
- Atualizando a documentação dos pacotes entre os servidores de personagem e acesso (HA).
- ServiceCharLogin.reqAccountInfo não passava um userID correto (é de fd e não sd).
- Mudanças em pacotes (diverproject.packets):
	- HA_AccountInfo tinha um atributo irrelevante, pois estava duplicado (userFD).
	- HA_AccountStateNotify pode usar boolean ao invés de byte.
	- HA_GlobalRegisters não estava utilizando o código do pacote corretamente.

29.01.2017 - 1.5.202
- CH_SelectChar estava causando exception já que estava configurando com um tamanho mínimo inválido.
- CharServerFacade agora irá receber ping, informações e quantidade de jogadores dos servidores de mapa.
	- ServiceCharMap atualizado para funcionar nas modificações acima.
	- MapServerFacade também poderá receber os pings vindo do servidor de personagem.
- Necessário implementar um id para ClientMapServer e será definido apenas em MapServerList.
- OnlineControl.newOnlineCharData não estava funcionando já que cache não adicionava a instância.
- Algumas outras pequenas correções e melhorias de lógica/log.

29.01.2017 - 1.5.201
- AbstractReceivePacket estava com má formatação na mensagem da exception criada em receive.
- Implementação do novo tipo de log que pode ser utilizado na biblioteca JavaUtil Log.

26.01.2017 - 1.5.200
- Atualizando as tabelas characters_locations e map_index para possuírem mapid (short).
- CharacterControl, MapPoint e IOMapIndex atualizados conforme as mudanças acima.

26.01.2017 - 1.5.199
- Movendo algumas configurações de MapServer.conf para SQlConnection.sql já que se refere ao SQL.
- As funções mapname2mapid e mapid2mapname devem trabalhar com o ID do mapa como shot.
	- Algumas outras classes foram modificadas: ClientMapServer e MapPoint.
- Implementação da seleção de um personagem do jogador durante a seleção de personagens.

22.01.2017 - 1.5.198
- Mudando o nome de OnlineMap para OnlineControl já que este utiliza o banco de dados.

22.01.2017 - 1.5.197
- Quando o servidor de personagem for destruído notifica o servidor de acesso das constas como offline.
- Agora se uma conexão for fechada no servidor de personagem remove OnlineCharData adequadamente.
- Retirando algumas funcionalidades de OnlineMap e tornando outras públicas para serem chamadas.
	- Modificado a forma como ele será utilizado pelos serviços.
- ServiceCharLogin irá realizar a operação de limpeza dos dados de jogadores online.
	- Não deve ser parte de ServiceCharServer já que este "não se comunica" com o servidor de acesso.

22.01.2017 - 1.5.196
- Servidor de mapas informa ao servidor de mapas os mapas que estão disponíveis.
- Algumas correções referentes a iteração e criação de um database com AbstractDatabase.
- GenericaDatabase irá forçar a implementação de Iterable ao invés de AbstractDatabase.
- IndexableDatabase irá instanciar o array (items) de forma diferente para evitar problema de cast.
- MapIndexes agora possui método que permite verificar se um mapa existe através do seu nome.
- ZH_SendMaps irá enviar não apenas a identificação do mapa como o nome do mapa também.
- MapServerFacade não estava criando a instância para AuthMap, causava NullPointerException.

21.01.2017 - 1.5.195
- Alterando constante PASSWORD_LENGTH de 32 para 24 conforme tamanho padrão de senhas.
- Implementação da conexão para comunicação entre servidor de personagem e servidor de mapa.
- MapServerList deve permitir verificar se há espaço para uma nova conexão.
- Enviando mapeamento para autenticações feitas no servidor de mapas (será usado futuramente).

21.01.2017 - 1.5.194
- Movendo as entidades utilizadas no servidor de personagem para common.entities.
	- O Servidor de Mapas também irá utilizar-se destas entidades.

21.01.2017 - 1.5.193
- Serviço abstrato para ser utilizado no servidor de mapas adicionado, AbstractMapService.
- Adicionado o facade e serviço de gerenciamento no servidor de mapas, MapServerFacede e ServiceMapServer.
- Comentando diversos métodos que devem ser implementados futuramente em ServiceMapServer.
- ServiceMapServer irá criar uma conexão com um banco de dados para leitura de bases de dados.

21.01.2017 - 1.5.192
- Estruturas básicas para criação de coleções que armazenem as bases de dados (jragnarok.database).
- Implementação da estrutura de MapIndex que pode ser armazenado em MapIndexes.
- IOMapIndex irá permitir a leitura de vários MapIndex em um arquivo de texto ou tabela SQL.

20.01.2017 - 1.5.191
- Documentação do restante das classes do servidor de personagem (server.character).

15.01.2017 - 1.5.190
- Movimentação de alguns métodos entre os serviços do servidor de personagem para ficarem corretos.
- Documentação de algumas classes e métodos que ainda não haviam sido documentadas.

14.01.2017 - 1.5.189
- Procedimento para leitura dos arquivos de mensagens do sistema em 'messages/{LANGUAGE}'.
- O idioma poderá ser definido através de um novo argumento na execução do sistema.

14.01.2017 - 1.5.188
- ServiceCharLogin irá manter um temporizador de keepAlive com o servidor de acesso.
- Evitar duas contas acessadas não estava funcionando corretamente em alreadyOnline(), ServiceCharLogin.
- Ao entrar na seleção de personagem alguns dados em setCharSelectSection() não estavam corretos.

14.01.2017 - 1.5.187
- Toda a parte do acesso de uma conta no servidor de acesso ficará em ServiceLoginAuth.
- Modificando ServiceLoginChar para que aceite corretamente o KeepAlive do servidor de personagem.
	- ServiceLoginClient.keepAliveCharServer() foi atualizado para evitar NullPointerException.
- ServiceLoginIpBan.onBanTime() corrigido, os valores de retorno estavam invertidos.
- Métodos que faziam o acesso de uma conta em ServiceLoginServer removidos e outros aprimorados.

14.01.2017 - 1.5.186
- Nova coluna para accounts denominada de 'online' para quanto esta estiver sendo utilizada.
- Evitando que FileDescriptorSystem faça uma chamada de closeListener() quando for nulo.
- Agora CLOSE_LISTENER de LoginServerFacade não poderá remover autenticação ou conta online.
	- Uma conta já na seleção de personagem fica acaba ficando offline no servidor de acesso.

12.01.2017 - 1.5.185
- Removendo alguns registros de mensagens (log) dos serviços no servidor de acesso.
- Renomeando algumas funções dos serviços de forma a deixá-los mais nítidos a sua finalidade.
- Chamado para manter conexão (keep alive) entre servidor de acesso e personagem corrigido.
	- Ainda falta que o servidor de personagem implemente e considere o mesmo com válida.

12.01.2017 - 1.5.184
- Pequena correção da rev183 de atualizações que não foram feitas.

11.01.2017 - 1.5.183
- Renomeando algumas enumerações usadas por pacotes para evitar duplicações.

11.01.2017 - 1.5.182
- Implementação das funcionalidades para deleção de personagens durante a seleção.
- CHARACTER_INFO_NEO_UNION não estava enviando o horário de deleção corretamente.
- Mudanças no controle de personagens, CharacterControl:
	- Remoção de personagens alterada já que está sendo usado InnoDB com ON DELETE.
	- Operação setCharData() não estava sendo realizada adequadamente.

11.01.2017 - 1.5.181
- Enviando o restante da implementação que deveria ter sido subida na rev180.

11.01.2017 - 1.5.180
- Documentação dos novos pacotes que foram implementados recentemente no sistema.
	- Estará sendo considerado ainda nos dados dos pacotes a identificação dos mesmo.
- Configurações padrões não estavam sendo carregadas corretamente em todos servidores.
- FileDecriptor agora possui um novo listener chamado quando uma conexão é fechada.

08.01.2017 - 1.5.179
- Alterando o valor padrão de alguns DATETIME no banco de dados e permitir que estes sejam nulos.
- Dois novos métodos timestamp() para trabalhar conforme a modificação acima.

08.01.2017 - 1.5.178
- Implementação da ação que permite a criação de personagens durante a seleção de personagens.
- Novas configurações relacionadas ao gerenciamento de personagens como criação e exclusão.
- Character passa a utilizar a enumeração Job para definir sua classe ao invés de um short.
- Correção de alguns pequenos detalhes que estavam causando erro na criação de personagens, CharacterControl.

07.01.2017 - 1.5.177
- Implementação do CH_PING para manter a conexão estabelecida do cliente com o servidor de personagem.
- Servidor de Personagem envia os dados de grupos e tipos de acesso VIP ao servidor de personagem.
- GroupControl irá utilizar GroupMap e VipMap para mapear os objetos em cache no servidor.
- Movendo Group e Vip de server.login.entities para server.common.entities.

07.01.2017 - 1.5.176
- O envio de dados para exibição de personagens foi corrigido, ServiceCharServerAuth.
	- Faltava enviar o aid do jogador ao cliente (tinha sido removido porém implementado errado).

07.01.2017 - 1.5.175
- Adicionando atributo para representação do sexo do jogador em sua conta.
- Revertendo valores conforme rAthena já que não está exibindo a seleção de personagens.
- Enviando AC_AckHash que deveria ter sido enviado na rev174.

07.01.2017 - 1.5.174
- AH_AccountData e AH_VipData estavam com tamanhos incorretos ao que lhes compõe.
- Correção para AcknowledgePacket onde é constituído por 2 bytes e não verifica PacketID (2 bytes).

07.01.2017 - 1.5.173
- Modificado a forma como o tamanho dos pacotes são de fato calculados.
	- Pacotes de tamanho dinâmico passam a ter valor igual a -1 ao invés de 0 conforme é de fato.
	- Os outros pacotes (com tamanho fixo) vão receber mais 2 bytes para complementar o PacketID.
	- Também foi implementado o toString() utilizando ObjectDescription nos que não possuíam.

07.01.2017 - 1.5.172
- Novo método utilitário para obter o tamanho de uma coleção sem verificar se é null.
- A versão do cliente não estava sendo verificada corretamente com a versão configurada.
- Movendo algumas classe enum usados por pacotes para packets.common como PincodeState.
- WAITING_DISCONNECT_TIMER movido de ServiceCharServer para ServiceCharLogin.

06.01.2017 - 1.5.171
- Alterando a forma como as mensagens de log são repassadas ao console do Java e ao console do JUtil.
- Implementação da modificação dos valores de CharData quando os personagens forem enviados, ServiceCharClient.
- Notificar no console que o servidor de personagem conseguiu se conectar com o de acesso, ServiceCharLogin.

05.01.2017 - 1.5.170b
- Alterando o nome de unban para unban_time na tabela characters conforme usado no controle.
- Atributo para unban_time adicionado em Character e já está sendo usado no sistema.
- Implementação de setCharData no controle de personagens para melhor manutenabilidade.

05.01.2017 - 1.5.170
- Documentação de alguns dos pacotes já utilizados feitos e alocados/adicionados em doc.
- Novo pacote para alocar todas as classes enumeradoras dos resultados dos pacotes, packets.common.
- Atributo de Character karma renomeado para virtue, identifica a influência em sistema PK.
- Novo enumerado RefuseEnter para resultados enviados por HC_RefuseEnter.
- AuthResult renomado para RefuseLogin e movido para packets.common.

05.01.2017 - 1.5.168
- TimerMap.delete() modificado para que TIMER_INVALID tenha alguma efetividade no sistema.
- Movendo authIsntOnline() para outro if já que sua invalidade envia um pacote diferente dos demais.
- Correção no retorno de authIsntOnline() quando um a conta estiver online no servidor de acesso.

05.01.2017 - 1.5.167
- Nome de todos os atributos de HC_Accept2 renomeados conforme estão especificados no PEEK.
- HC_AcceptEnterNeoUnion e HC_AckCharInfoPerPage irão usar CharacterInfo para dados de personagens.
	- Valor em bytes de alguns atributos corrigidos passando de 145 bytes para 147.
- Removendo charSlots que não estava sendo utilizado de fato pelo rAthena, HC_CharListNotify.
- Implementação do pacote final enviado por sendBlockCharacters(), HC_BlockCharacter.
- Pequenas correções em CharacterControl e CharSessionData e sendCharPageCount().

05.01.2017 - 1.5.166
- Modificando a forma como characters_locations irá reagir quando um character for excluído.
- Novo atributo para accounts que irá determinar o número de slots para personagens (extra).
- MIN_CHARS deve possuir o mesmo valor de MAX_CHARS (pelo menos por em quanto deve ser 9).
- OnlineLogin.toString() não estava funcionando através de ObjectDescription.
- OnlineMap deve eliminar OnlineCharData de jogadores que não estejam mais ativos no servidor.

05.01.2017 - 1.5.165
- Movendo as classes no servidor de personagens conforme devem estar localizados.
	- Entidades movidas de character.structures para character.entities.
	- Restantes das classes de character.structures movidas para character.

05.01.2017 - 1.5.164
- JRagnarokConsole irá se encarregar de interpretar os comandos digitados em console.
- Agora os comandos digitados em console são apagados quando confirmados para executar.

05.01.2017 - 1.5.163
- Alterando a ordem como algumas operações de criação/inicialização do servidor.
	- As alterações foram feitas afim de que estas funcionem com o JRagnarokConsole.
	- Além de que agora alguns dos problemas de são de cada thread do servidor.

05.01.2017 - 1.5.162
- Adicionando a utilização de um Console (JFrame) para melhor interação com o servidor.
	- Mais a frente poderá ser realizado comandos para obter informações do servidor rodando.
- Server irá possuir um atributo Show que será responsável por exibir as mensagens no console.
	- Todos os servidores irão utilizar-se a thread ServerThreaed para funcionar com Show.
	- Interfaces Runnable implementadas ao criar as threads agora virão atributos final.

04.01.2017 - 1.5.161
- Correção no nome do método que registra as exceções (log).

31.12.2016 - 1.5.160
- Movendo os pacotes para outra pasta de código fonte, separando o servidor dos pacotes.
- RagnarokPacket atualizado conforme deveria ter sido feito na rev159.
- Melhor divisão dos pacotes recebidos através de CharServerFacade.CLIENT_PARSE.

31.12.2016 - 1.5.159
- Adicionando todos os identificadores dos pacotes existentes entre servidores ou cliente/servidor.
	- Os que não estiverem sendo utilizados ficarão comentados até que sejam implementados.
- Nome de todos os pacotes utilizados até o momento foram ajustados conforme identificadores.

31.12.2016 - 1.4.158
- Excluindo classes dos pacotes depreciados.
- Documentando os novos pacotes adicionados na rev157.

31.12.2016 - 1.4.157
- Alterando o formado de organização e nomeação (classes) dos pacotes, também foram documentados.
- Agora sendAccountData poderá receber o fdID corretamente sem causar problemas no servidor de personagem.
- AuthControl renomeado para AuthMap e OnlineCharControl renomeado para OnlineMap.
- CharSessionData estava causando problemas por não inicializar algumas dependências.
- AbstractCharService não deverá mais possuir as dependências do servidor de personagem (serviços/controles).
- CharServer será responsável apenas por instanciar CharServerFacade e não os seus serviços.
- CharServerFacade adicionado para guardar os serviços/controles/coleções do servidor de personagem.
	- Alguns listeners também são movidos para cá, principalmente os de reconhecimento de pacotes.
- ServiceCharLogin.parseAuthAccount não estava funcionando como era esperado.
- ServiceCharLogin.parseAccountData pedia para que aid fosse diferente e não igual.

31.12.2016 - 1.4.156
- Problema onde characters_locations não permitia duas localizações de um mesmo personagem.
- As operações de get() e isAlive() não estavam funcionando adequadamente, FileDescriptorSystem.

21.12.2016 - 1.4.155
- Relações de dependências da tabela accounts_groups corrigidas.
- AuthNode não estava inicializando seed que causava NullPointerException.
- ServiceLoginServer.removeOnlineUser() poderia causar NullPointerException.

21.12.2016 - 1.4.154
- Nome dos getters para OnlineMap e AuthAccountMap atualizados, LoginServerFacade.
- Novas dependências em ServiceLoginAccount para realizar os novos métodos implementados.
- AccountControl agora permite verificar se uma determinada conta existe pelo seu ID.
- Parâmetros desnecessários removidos de GlobalRegisterControl, GlobalRegister já o faz.

20.12.2016 - 1.4.153
- Excluindo GlobalAccReg para que seja utilizado uma nova classe que corresponda de melhor forma.
- Agora GlobalRegisterOperation terá a finalidade de GlobalAccReg e já está sendo usado.

20.12.2016 - 1.4.152
- Implementando o controle para registro de variáveis globais e request/result packet para este.
	- Apenas o lado do servidor de acesso foi implementado, o de personagem entra em outras partes.
- IpBanControl agora irá usar REPLACE ao invés de INSERT para se tornar mais útil.

19.12.2016 - 1.4.151
- LoginServerFacade atualizado para redirecionar os pacotes aos serviços corretos.
- Renomeando as constantes em OnlineLogin para que fique mais explícito o seu significado.
- OnlineMap não terá acesso a TimerMap, será apenas uma coleção implementada usada no sistema.
- Movendo diversos métodos de ServiceLoginAccount para ServiceLoginChar conforme deve ser.
- ServiceLoginAuth precisará falar com ServiceLoginServer para manter usuários online.
- ServiceLoginChar implementado para tratar dos chamados disponíveis de um servidor de personagem.
- ServiceLoginClient atualizado conforme os pacotes que foram utilizados nas mudanças acima.
- ServiceLoginServer deverá cuidar de quais usuários estão online ou não no sistema.

19.12.2016 - 1.4.150
- Novos métodos para facilitar a codificação e obtenção de informações em Account e AccountGroup.
- Server não tem mais um atributo para defaultParser, será aplicado direto dos servidores.
- O ID do servidor de personagem como cliente no servidor de acesso deve ser feito por CharServerList.
	- ClientCharServer agora deverá possuir um ID para que seja identificado.
- Renomeando ServerController para ServerControl.

19.12.2016 - 1.4.149
- FileDescriptor não precisará ter conhecimento de FileDescriptorSystem.
- FileDescriptorSystem não precisará ter conhecimento de TimerSystem.
- Corrigindo a forma como temporizadores em TIMER_INTERVAL deverão ser ativados.

14.12.2016 - 1.4.148
- Nome de usuário e senha usados pelo servidor de acesso e de personagem agora são validados.

14.12.2016 - 1.4.147
- Excluindo todas as tabelas do banco de dados anterior devido a problemas com foreign key.
- Entidades e controles atualizados conforme as mudanças nas tabelas.
- Alterando a forma como será listado os comandos e permissões de um grupo de contas.
- Agora IpBanList irá funcionar com um código de identificação mas address_list será único.

12.12.2016 - 1.4.146b
- GroupControl agora deverá carregar os grupos de conta e vip quando inicializado por init().
	- Pequenos aprimoramentos para facilitar possíveis manutenções futuras.
- ClientCharServer não estava inicializando o seu endereço de IP com InternetProtocol.
- Alterando a forma como comandos e permissões são definidas aos grupos de conta.

12.12.2016 - 1.4.146
- Mais documentação das classes em server.login e alguns ajustes textuais de log.
- Atualizando o Diagrama de Classes conforme o que se está presente em código, apenas server.login.

12.12.2016 - 1.4.145
- Pequenos ajustes nas mensagens de logDebug em OnlineMap.
- ServiceLoginLog não considerava a configuração de uso do serviço em LoginServerFacade.destroy().

12.12.2016 - 1.4.144
- Agora a configuração char.new_display passa a ser do tipo booleano já que não há outras opções.
- Todas as classes contidas em login.structures foram movidos para login, não há necessidade de separar.
	- Além de serem movidas foram todas completamente documentadas.

12.12.2016 - 1.4.143
- AuthAccountMap e OnlineMap movidos de login.control para login, são coleções e não controles.
- IpBanList foi movido de login.control para login.entities já que é uma entidade.

12.12.2016 - 1.4.142
- Enviando diagrama feito no Visual Paradigm sendo iniciado pelo LoginServer.

12.12.2016 - 1.4.141
- O sistema agora irá usar o padrão de projetos Facade para melhor estruturação dos serviços.
- AuthAccountControl e OnlineControl não eram controles e sim coleções (renomeados adequadamente).
- Removendo métodos que não são tem utilidade para a interface Login.
- AbstractServiceLogin não terá todos os controles/serviços, porém terá um init() e destroy().
- LoginServerFacade adicionado para possuir os listener que irão reconhecer e despachar as conexões.
- Todos os serviços atualizados para que funcionem conforme LoginServerFacade.
	- Alguns métodos foram movidos para seus locais mais adequados (principalmente os dois parse).

12.12.2016 - 1.3.140
- ServiceCharLogin.sendPacket() não estava enviando os dados para o FD esperado.
	- Atualizado para a utilização de DisconnectPlayer.
- Adicionando mais algumas constantes em RagnarokPacket que serão usados em breve.

11.12.2016 - 1.3.139
- IpBanDAO excluído, agora IpBanControl deverá realizar os chamados com o banco de dados.
- Pequeno ajuste em AbstractControl para evitar chamado super.toString desnecessário.
- ServiceLoginClient não precisa realizar um init() especificado para si.

11.12.2016 - 1.3.138
- LoginServerFacade adicionado para alocar todos os serviços e controles de LoginServer.
	- Serviços atualizados conforme as mudanças com LoginServerFacade.

11.12.2016 - 1.3.137
- CharSessionData não inicializava LoginSeed e LoginSeed agora permite definir valores.
- ServiceCharClient estava chamando parseAlreadyAuth() de forma inadequada.
	- O procedimento também não estava implementado adequadamente.
- AuthAccountResult deve receber o fd de quem solicitou a autenticação (cliente).
- ServiceCharMap.disconnectPlayer() deverá receber um enum do tipo DisconnectPlayer.
	- ServiceCharServerAuth atualizado conforme modificação acima.

11.12.2016 - 1.3.136
- LoginServer pode acabar inicializando ServiceLoginIpBan e/ou ServiceLoginLog duas vezes.
- Corrigindo mensagem de log para IpBanControl.cleanup() e query para IpBanDAO.cleanup().

11.12.2016 - 1.3.135
- Configuração para o tempo de intervalo na sincronização de endereço de IP definido.
- Mensagem de log em FileDescriptorSystem ao encerrar sessão melhor definida (identifica cliente/servidor).
- Agora setExceptionsEOF não poderá afetar conexões que são servidores.
- Temporizadores não estavam sendo chamados corretamente em TimerMap.

10.12.2016 - 1.3.134
- OnlineCharControl estava tentando atualizar a tabela de contas e não dos personagens.
- ServiceCharLogin.sendAccounts() causava exception quando não houvesse conexão com o servidor de acesso.
- A conexão no servidor de personagem com o servidor de acesso será alocada após parseLoginResult().

10.12.2016 - 1.3.133
- LoginServer deve inicializar primeiramente os controles e só depois os serviços.
- Após a mudança de AbstractLoginService, ServiceLoginChar e ServiceLoginClient não foram atualizados.
	- Estava faltando a chamada super.init() para obter os serviços e controles dependentes.

10.12.2016 - 1.3.132
- Os servidores estavam tentando ler configurações padrões que não lhe eram úteis.
- FileDescriptorSystem não notifica novas conexões, agora será Server (debug).
- Preferências padrões para leitura de configurações ficará em ConfigReader ao invés de Server.

10.12.2016 - 1.3.131
- CharServer não estava utilizando o ServiceCharMap.
- ServiceCharServer e ServiceCharLogin não estavam sendo inicializados.
- ChangeSex não faz parte dos controles e sim de estruturas.

10.12.2016 - 1.3.130
- Implementação quase completa do serviço para comunicação do servidor de personagem com o de acesso.
	- Algumas funcionalidades precisam ser melhor estudadas para identificar as informações usadas.
	- Todos os serviços do servidor de personagem tiveram uma ou mais modificações.

10.12.2016 - 1.3.129
- ClientMapServer deverá usar CFileDescriptor conforme as outras sessões.
- Constante OnlineCharData.NO_SERVER corrigido (de 1 para -1).

10.12.2016 - 1.3.128
- FileDescriptorSystem deverá permitir a iteração para funcionalidades futuras.
- AccountInfoRequest e AccountInfoResult atualizados, algumas informações não serão necessárias.

10.12.2016 - 1.3.127
- AlreadyOnlne é um pacote entre servidores, portanto deve ser do tipo request.

10.12.2016 - 1.3.126
- Configurações para limitação de personagens no servidor de acesso e para movimentar personagens de slot.

09.12.2016 - 1.3.125
- Tipo de constantes atualizados e algumas novas que serão utilizadas.
- Tables atualizado conforme a última revisão (rev124), deveria ter sido enviado.

09.12.2016 - 1.3.124
- Coluna unban faltando em characters adicionado e algumas em characters_look renomeadas.
- CharacterControl irá possuir as funcionalidades dos controles de suas dependências.
	- Não é necessário ter um controle para cada dependência.
- Dependências de Character agora irão implementar CanCopy e não carregaram o charid.

05.12.2016 - 1.3.123b
- Atributos de Character restantes adicionados e separando atributos para outra classe.
	- Tabelas do banco de dados também foram atualizadas.
	- CharSessionData também foi atualizado conforme algumas destas modificações.
- AuthAccountResult modificado para que result seja do tipo booleano.

05.12.2016 - 1.3.123
- AuthNode e OnlineLogin não são entidades já que não são persistidas no banco de dados.

05.12.2016 - 1.3.122
- Inicialização da implementação da análise da comunicação entre o servidor de acesso e de personagem.
	- ServiceCharLogin recebeu o switch do comando (pacote) e iniciou algumas implementações.
	- Os procedimentos do switch não implementados ficaram como TODO para próximas revisões.
- ServiceCharServer não estava como AbstractCharService.
- ServiceCharMap adicionado para fazer a comunicação do servidor de personagem para com o de mapa.

05.12.2016 - 1.3.121
- OnlineCharControl não possuía cleanup para limpar usuários que já estão offline.
- Pequenos ajustes para CharServer referentes a serviço e CFileDescriptor.

05.12.2016 - 1.3.120
- Adicionando mais códigos de identificação dos pacotes disponíveis no sistema.
- AuthAccountResult não estava sendo implementado como PacketRequest.
- UpdateUserCount precisava do setUsers para funcionar adequadamente.

05.12.2016 - 1.3.119
- Configurações do sistema de Código PIN adicionado.

05.12.2016 - 1.3.118
- Enviando CFileDescriptor que deveria ter sido enviado na rev117.

05.12.2016 - 1.3.117
- SessionData adicionada e todo FileDecriptor deverá possuir um SessionData.
- Agora FileDecriptor deverá ser especificado para cada servidor:
	- LoginServer irá usar LFileDescriptor com um LoginSessionData.
	- CharServer irá usar CFileDescriptor com um CharSessionData.
	- MapServer irá usar MFileDescriptor com um MapSessionData.
- FileDecriptor também não irá mais possuir um cache.
- Login não será mais uma classe e sim uma interface para ser usada em ServiceLoginLog.

03.12.2016 - 1.3.116
- Aplicando o mesmo padrão de AbstractLoginService em AbstractCharService.
- As correções da rev155 em LoginServer também foram aplicadas a CharServer.

03.12.2016 - 1.3.115
- Serviços e controles serão criados e destruídos corretamente, LoginServer.

03.12.2016 - 1.3.114
- Renomeando as variáveis de controle em AbstractLoginService para deixar em um tamanho menor.

03.12.2016 - 1.3.113
- Todos os serviços e controle agora ficam alocados em AbstractLoginService.
	- Isto facilita a codificação já que os serviços comunicam entre si e usam diversos controles.
- Todos os controles usados em LoginServer agora se encontram nele ao invés de nos serviços.

03.12.2016 - 1.2.112
- MapServerList adicionado para manter todos os servidores de mapa conectados ao servidor de personagem.
- Novo controle para garantir autenticações existentes dentro do servidor de personagem por AuthControl.
- OnlineCharData irá armazenar o código de identificação do servidor de mapa como int e não short.
- AbstractCharService não estava sendo definido da forma correta conforme esperado.
- Dependências de controles e serviços adicionados a CharServer.
- ServiceCharLogin estava realizando operações que não lhe pertencem.

03.12.2016 - 1.2.111
- CharSessionData atualizado conforme atualizações recentes da rev109.
- OnlineCharControl atualizado para registrar mensagens em debug das operações.
	- Também foi separado algumas ações de add() para makeOnline().

03.12.2016 - 1.2.110
- AuthAccountResponse e AuthAccountReceive agora estão como AuthAccountRequest conforme o sistema define.
- Implementação do equals para facilitar a comparação entre duas seeds, LoginSeed.

03.12.2016 - 1.2.109
- Movendo algumas estruturas para server.common pois podem ser utilizadas por todos os servidores.
	- Junto destas foram movidos enumerações referentes aos pacotes.
- Removendo atributos desnecessários de AuthNode do servidor de acesso, foi confundido com outro.

03.12.2016 - 1.2.108
- CharServer estava enviando endereço de IP nulo para LoginServer em checkLoginConnection.
- Inicialização do desenvolvimento para análise de pacotes recebidos de clientes em ServiceCharClient.
	- Adicionando apenas log para mostrar pacote desconhecido pelo serviço.

03.12.2016 - 1.2.107
- Os servidores estavam consumindo muito do processado, solução possivelmente temporária (sleep).
- ListCharServers deve definir o endereço de IP invertendo os seus valores ao enviar para o cliente.

30.11.2016 - 1.2.106
- Enviando controles e entidades referentes aos dados iniciais de um personagem.
- CharServer atualizado para instanciar todos os controles que foram adicionado.
	- Também foi completamente documentado.
	- Analisador de novos clientes foi definido, ServiceCharClient.parse.
- Pequena inicialização das funcionalidades de ServiceCharClient.

28.11.2016 - 1.2.105
- Atualizando a forma como AbstractControl será descrito por toString().

25.11.2016 - 1.2.104
- Constantes de CharServerType renomeadas para uma melhor definição do mesmo.

25.11.2016 - 1.2.103
- Renomeando o pacote dos controles de login-server para control ao invés de controller.

21.11.2016 - 1.2.102
- Enviando arquivo SQL referente a tabela para banimento dos endereços de IP.

21.11.2016 - 1.2.101b
- Subindo ServiceLoginAccount que deveria ter sido enviado em revisões passadas.

21.11.2016 - 1.2.101
- Pequenos ajustes de cast que não são mais necessários e bytes skipped, ListCharServers.
- Adicionando alguns log para melhorar a visualização do andamento nos servidores.
- Implementação da funcionalidade de waitingDisconnectTimer.
- Timer agora possui uma vinculação com algum objeto através de um ID.
	- Agora o tick e interval só serão alterados se forem maior que zero.
- ServiceLoginServer atualizado conforme mudanças recentes nos controles.
- Novos procedimentos que serão usado em funcionalidades futuras, ServiceLoginClient.

20.11.2016 - 1.2.99
- Renomeando AbstractDAO para AbstractControl, não será mais utilizado Control e DAO.
	- A separação era feita apenas para considerar um cache porém nem tudo usa cache ou precisa.
	- Nem todos os controles foram atualizados com essa modificação.
- As operações realizadas em AccountDAO agora estão alocadas em AccountControl.

20.11.2016 - 1.2.98
- Conexões estavam sendo fechadas antes do necessário, removido condição temporariamente.
	- Agora serão removidos por ociosidade, pois o socket terá sido fechado.

20.11.2016 - 1.2.97
- ServiceLoginIpBan deve considerar o ServiceLoginLog do LoginServer.
- ServiceLoginIpBan também não estava sendo inicializado por LoginServer.

20.11.2016 - 1.2.96
- ServiceCharLogin atualizado conforme as mudanças da rev95.

20.11.2016 - 1.2.95
- Server agora registra no console caso uma nova conexão seja solicitada com servidor cheio.
- Atualizando newFileDecriptor para definir o listener antes que update possa chamar o FD.
- Ao fechar FileDescriptor não deverá ou será necessário mudar o ID do mesmo para 0.

16.11.2016 - 1.2.94
- Ao atualizar um cliente (FD) ficava preso em acknowledge por não receber pacote.
	- Para isso FileDescriptor recebe hasData para verificar se há pacote à receber.
- ServiceLoginClient.acknowledgePacket atualizado para retornar true em alguns pacotes.


10.11.2016 - 1.2.93b
- Formatação no nome dos identificadores dos pacotes.
- Novo flag para ser incorporado por FileDescriptor, FLAG_PING_SENT.
- CharServer deverá instanciar e iniciar os serviços que lhe faz parte.
- ServiceLoginServer deverá ser responsável pelos controles de LoginServer.
- Serviços de CharServer e LoginServer atualizados conforme as mudanças nos pacotes.
- Vip não estava implementando o atributo referente e char billing.

08.11.2016 - 1.2.93
- Contas agora podem ser obtidas do banco de dados através do seu ID.

08.11.2016 - 1.2.91
- Inicialização dos serviços de CharServer, solicitação de acesso com LoginServer.
- LoginSeed corrigido, first e second devem ser do tipo int ao invés de long.
- CT_NONE adicionado para ClientType não definido (será usado mais a frente).
- Envio de pacote "ping" para com CharServer, ServiceLoginClient.pingCharRequest.

08.11.2016 - 1.2.90
- Atualizando o nome da identificação dos pacotes conforme sua finalidade.
- CharConnectResponse e CharConnectReceive agora ficam em CharConnectRequest.
- Atualizando serviços de LoginServer conforme mudanças acima.

08.11.2016 - 1.2.89
- Renomeado GenericPacket para AbstractPacket.
- Novo formato de funcionamento dos pacotes tento agora AbstractReceivePacket e AbstractResponsePacket.
- ReceivePacket irá funcionar conforme AbstractReceivePacket e ResponsePacket conforme AbstractResponsePacket.

08.11.2016 - 1.2.88
- LoginService atualizado para destruir ServiceLoginAuth e ServiceLoginIpBan.
- Implementação do serviço para banimento de IPs (ServiceLoginIpBan) incluindo DAO e Control.
- Movendo alguns métodos contidos em AccountDAO para GroupDAO e forma de load modificado.
	- Será passado apenas o objeto e o ID deve ser definido antes para seguir a OO.
- Documentação feita nos controles e DAO existentes e removido throws dos controles.

08.11.2016 - 1.2.87
- Enviando ServiceLoginAuth que não foi enviado na rev86.

08.11.2016 - 1.2.86
- ServiceLoginAuth adicionado para realizar algumas operações de ServiceLoginClient.
	- ServiceLoginClient deve ser um serviço apenas para enviar pacotes ao cliente e de análise (parse).
		- dispatch ficará como acknowledgePacket e não irá tratar apenas de alguns pacotes.
		- Alguns métodos passam a se tornar públicos como keepAlive e updateClientHash.
		- Deverá realizar refuseLogin e charServerResult.
- ServiceLoginLog documentado e OnlineController renomeado para OnlineControl.

08.11.2016 - 1.2.85
- LoginCharServers renomado para CharServerList.
- Nome de identificação de alguns pacotes renomeados (removido algumas siglas).
	- Adicionando alguns identificadores que serão usados em revisões futuras, CharServer.

08.11.2016 - 1.2.84
- Servidores quando destruídos agora devem destruir o TimerSystem e FileDescriptorSystem também.
	- Nesse caso a destruição ocorre simplesmente limpando os dados desses sistemas.

07.11.2016 - 1.2.83
- Enviando arquivos para atualização do banco de dados referente a rev79.

07.11.2016 - 1.2.82
- Separando todos os tipos de pacotes para packet.receive ou packet.response.
	- Também foi renomeado alguns pacotes para ficarem com nomes mais diretos ou específicos.

03.11.2016 - 1.2.81
- Pequenas correções referentes as mudanças na rev79: AccountDAO e LoginLogControl.
- Modificando o nome de usuário para o servidor de personagem conectar-se ao servidor de acesso (rev80).

03.11.2016 - 1.2.80
- Conexão SQL agora permite definir o timezone desejado.
	- Modificando a validação de expiration e unbantime em ServiceLoginServer.
- Inicialização, limpeza e fechamento de conexão forçada para LoginCharServers em LoginServer.

03.11.2016 - 1.2.79
- Modificando a forma como a atualização/chamado dos temporizadores será feita:
	- Será repassado now (tempo do servidor) e tick (milissegundos passados).
- Ajustes para a remoção de FileDescriptor ocioso ou que foi encerrado (EOF).
- Atualizar os temporizadores agora deverá ser feito por getTimers().update.
- Timer agora poderá ser comparado a outro Timer, para ser adicionado corretamente em NodeList.
- ServiceLoginClient.requestCharConnect deve retornar boolean para fechar conexão se necessário.
- Removendo tabela login do banco de dados, dados vinculados a tabela accounts.
- Account agora será um Login, atualizando AccountDAO para que solicite os dados corretamente.

01.11.2016 - 1.2.78
- Movendo todos os serviços de login.service para login.
	- Renomeando de Login*Service para ServiceLogin* conforme ordem ortográfica.

01.11.2016 - 1.2.77
- Mudanças para Server:
	- getPort e getHost devem voltar a ser abstract, pois muda o nome da configuração entre servidores.
	- initConfigs deverá garantir a existência das configurações porém não deve carregá-las.
	- readConfigFiles adicionado para efetuar a leitura dos arquivos de configurações (padrões e privado).
- LoginServer, CharServer e MapServer atualizados para funcionar com getPort e getHost.
	- Implementação do carregamento das configurações até então existentes.

01.11.2016 - 1.2.76
- Atualizando funcionamento base de JRagnarok para criar e configurar todos os servidores encontrados.
- Pequenas correções e atualizações em Server referentes a nomes e visibilidade de métodos.
	- Também foi incluso uma constante e uso padrão para preferências ao usar ConfigReader.
- Documentando as constantes do sistema (JRagnarokConstants).
	- MAX_NAME_LENGTH foi renomado para MAX_USERNAME_LENGTH.

01.11.2016 - 1.2.75b
- Pequenas correções em valores padrões, nome das constantes e configurações iniciais, JRagnarokConfigs.

01.11.2016 - 1.2.75
- Removendo as configurações específicas padrões de ConfigTypes.
- Barras para indicar diretórios removido das configurações.
- A configuração server.folder será especificado nas configurações de cada micro servidor.
- LoginServer.conf corrigido, duas configurações não definidas e removido três não usadas.

01.11.2016 - 1.2.74
- Pequenas modificações em ConfigReader para torná-lo mais dinâmico com preferências.
- Configurations.toString deverá mostrar o nome e valor da configuração.

30.10.2016 - 1.2.73
- Modificando TimerSystem e FileDescriptor para que possam ser usados por todos os servidores.
	- Agora não usam Singleton e são instanciados dentro de um Server.
	- Toda a parte estática (exceto constantes) de FileDescriptor foram para FileDescriptorSystem.
- Adicionando métodos para obter TimerSystem e FileDescriptorSystem do servidor que pertence.
- Todos os serviços foram atualizados para que trabalhem com os sistemas de seus servidores.

30.10.2016 - 1.2.72
- Atualizando os arquivos de configurações e separando as configurações conforme esperado.

30.10.2016 - 1.2.71
- Configurations agora permite adicionar configurações de outro Configurations.
- ConfigLoad renomeado para ConfigReader para fazer jus a sua finalidade.
- Removendo toda estrutura que tornava CharServer, LoginServer e MapServer Singleton.
	- ServerListener agora fica implementado como atributo para evitar acesso por fora.
- LoginServer atualizado para a utilização de JRagnarokConfigs.

30.10.2016 - 1.2.70
- Excluindo diversas configurações que não serão mais necessárias.
- JRagnarokConfigs movido para jragnarok.configs.
	- Agora ele deverá instanciar Configurations de todos os grupos de configurações.
	- Adicionando constantes para o nome de todas as configurações existentes até o momento.

30.10.2016 - 1.2.69
- Atualizando Server para obter algumas informações de configs.
- CharConfig, LoginConfig e MapConfig agora são Configurations.
- CharServer, LoginServer e MapServer não usa mais o Singleton.
	- Será permitido criar diversos micro servidores (Server).

30.10.2016 - 1.2.68
- Config agora possui setRaw para atribuir um valor por string.
	- Cada classe deve implementar como será atribuído.
- ConfigLoad renomeado para ConfigRead e algumas pequenas melhorias.

29.10.2016 - 1.2.67
- Configurações agora serão agrupadas por Configurations.
- Config deverá especificar os tipos de configurações existentes (static).
- JRagnarok deve considerar a leitura de argumentos passados na inicialização.
	- Inicio do projeto para criação de micro servidores e independências.

29.10.2016 - 1.1.66
- Implementação do sistema para leitura de vários servidores.

29.10.2016 - 1.1.65
- Limpando strings que são recebidas de CharConnectReceive (strclr).

29.10.2016 - 1.1.64
- Novos métodos para converter valores de horas para milissegundos com ou sem minutos e segundos.
- Pequena correção no nome da configuração que deveria ser client.version, LoginClientService.
	- Também foi removido algumas condições desnecessárias em requestCharConnect.

29.10.2016 - 1.1.63
- Agora setInterval em Timer deve ser usado por TimerMap.addInterval.
- Correções para TimerMap:
	- acquireTimer deve ser um método de TimerMap.
	- add deve adicionar o temporizador como TIMER_ONCE_AUTODEL.
	- addInterval deve adicionar o temporizador como TIMER_INTERVAL.
	- setTimerExpired não precisa adicionar o temporizador.
	- delete deve remover o temporizador da lista de temporizadores.
- Atualizando todas as classes que utilizam temporizadores conforme atualizações acima.
- LoginCharacterService não era inicializado no LoginServer.
- LoginClientService atualizado conforme rev62.

29.10.2016 - 1.1.62
- Por em quanto ConfigLoad não deverá mostrar que a configuração não existe.
- Pacotes corrigidos, CharConnectRequest envia e CharConnectReceive recebe.
	- CharConnectResult deve enviar o resultado da solicitação do acesso.

27.10.2016 - 1.1.61
- Algumas documentações de classes corrigidas.
- Removido o atributo data de Timer já que não está sendo usado no momento.

27.10.2016 - 1.1.60
- Problema onde clone estava tornando configurações específicas em ConfigObject.
- ConfigClientHash e ConfigIP não aceitava o objeto direto por setObject adequadamente.

27.10.2016 - 1.1.59
- Configurações agora podem ser clonadas para facilitar o multiuso de uma configuração.
	- Assim se pode ter vários servidores usando uma configuração com valores diversificados.
- CharConfig, LoginConfig e MapConfig deverão usar clone para duplicar as configurações.
- Implementação básica para leitura das configurações em CharServer e MapServer.

25.10.2016 - 1.1.58
- Redução na complexidade ciclomática de algumas operações.

25.10.2016 - 1.1.57
- Redução na complexidade ciclomática de JRagnarokUtil.dateToVersion com PACKET_VER[].

25.10.2016 - 1.1.56
- Reconhecimento e autenticação de uma conexão solicitada por um cliente (jogador).
	- Isso inclui implementação de métodos/listeners em LoginClientService e LoginService.
- AuthResult foi movido para login.structures e CharServerType.CODE alterado de int para short.
- AccountDAO e LoginLogController atualizados conforme atualizações passadas.
- LoginLogController renomeado para LoginLogControl e AccountController para AccountControl.
- Novos controles:
	- AccountControl é intermediário na persistência de contas e cache de contas.
	- AuthControl funciona como cache para saber os clientes que já foram autenticados.
	- OnlineControl funciona como cache para identificar os clientes que estão online.

25.10.2016 - 1.0.55
- Atualizando LoginServer conforme as mudanças feitas na rev53.
- Agora LoginLogService.add poderá receber um IP como número inteiro.
- LoginCharServers deve permitir obter um elemento e saber o tamanho da coleção.

25.10.2016 - 1.0.54
- Problema onde min_group_to_connect não estava sendo carregado desde a rev44 resolvido.

25.10.2016 - 1.0.53
- JRagnarok irá tratar as exceptions que forem recebidas, as mensagens serão registradas.
- Algumas documentações adicionadas referentes as classes já existentes.
- FileDescriptor agora irá usar flag como um BitWise ao invés de FileDescriptorFlag.
- TimerListeners não será mais necessário já que todo TimerListener está em um Timer.

24.10.2016 - 1.0.52
- Atualizando LoginLogService para receber um InternetProtocol ao invés de String.
- InternetProtocol agora permite copiar os dados de um outro InternetProtocol.
- Renomeando alguns atributos de ClientCharServer (fd e ip).
- Pequenas correções em LoginSessionData.

24.10.2016 - 1.0.51
- Alguns ajustes de TimerListener que deveriam ter sido feitos na rev50.
- LoginServer não irá trabalhar com LoopList e sim com LoginCharServers.
- TimerMap.add não incluía nos listeners o listener do Timer adicionado.

24.10.2016 - 1.0.50
- TimerSystem agora irá usar TimerMap para mapear a indexar os temporizadores.
	- Tickers foi unido a TimerMap afim de seguir a OO.
- TimerListener deverá ser encarregado de saber seu próprio nome.
- Novos métodos para trabalhar com tempos em milissegundos, JRagnarokUtil.
- Nome dos atributos e definições padrões ao nome das tabelas atualizados, Tables.
- Removendo algumas constantes que não serão mais usadas em FileDescriptor.
- Atualizando listeners que usavam TimerListener para implementar getName e toString.

24.10.2016 - 1.0.49
- ClientHash atualizado para que efetua uma comparação de hash e não de objeto.
- ClientType não é a definição do idioma do cliente, aparentemente não há definições.
	- Será usado 22 como padrão, já que o cliente passou esse valor.
- LoginSeed agora irá gerar as duas seeds conforme esperado.
- Ajustando LoginSessionData conforme a OO, usando Group.

24.10.2016 - 1.0.48
- Enumeração de AccountState definido e testado, parse ajustado conforme mudanças.

24.10.2016 - 1.0.47
- Removendo estruturadas antigas das entidades, já que foram realocadas.
- LoginServer agora irá usar Login para registrar o seu acesso.
- Também foi corrigido o problema na criação dos servidos de LoginServer.
- As configurações não estavam sendo lidas corretamente em LoginServer.
- Pequenas correções de inicializações e restrições nos setters das entidades.

24.10.2016 - 1.0.46
- FileDescriptor agora permite adicionar ações para serem executados por todos fd.
	- As ações serão executadas uma única vez.
	- FileDescriptorAction será usado para que isso possa ser possível.

24.10.2016 - 1.0.45
- Problema onde ServerService causa NullPointerExceptions devido a falha de conexão com o banco de dados.
- Ajuste temporário para o problema de timezone do servidor com o banco de dados.
- Configuração de sql.legacydatetime adicionado para quando se conectar ao MySQL.

24.10.2016 - 1.0.44
- Atualizando algumas das configurações:
	- Versão do cliente de 50 para 55.
	- Renomeando min_group para min_group_to_connect.
	- Adicionando a opção de legacydatetime para conectar-se com o MySQL.
	- System.conf adicionado para configurações gerais entre os servidores.
- CharConfig e MapConfig atualizado para carregar ConfigFiles e ConfigSQL.
	- LoginConfig também passa por parte das mudanças acima.

18.10.2016 - 1.0.43
- ControllerLoginLog renomado para LoginLogController e movido para login.controllers.

18.10.2016 - 1.0.42
- Enviando entidades e classes para armazenar comandos e permissões dos grupos de jogadores.

18.10.2016 - 1.0.41
- Entidades removidas de login.services para login.entities.
- As classes de controle e DAO ficarão alocadas em login.controllers.
- Enviando entidades atualizadas conforme as mudanças já feitas no banco de dados.
- Os servidores terão DAO e Controller:
	- DAO irá trabalhar com os objetos e a conexão com o banco de dados.
	- Controller irá funcionar como cache do banco de dados.

18.10.2016 - 1.0.40
- Renomeando algumas tabelas para nomes mais adequados a suas finalidades.
- Comandos e permissões listados em um grupo sempre estarão habilidades (enabled não é necessário).
- Renomeado um atributo de accounts para ficar com cara de banco de dados e char_slots removido.

18.10.2016 - 1.0.39
- Removendo as tabelas anteriores do banco de dados, diversos problemas encontrados.

11.10.2016 - 1.0.38
- Enviando arquivo para atualizar o banco de dados SQL com as novas tabelas.
	- Também está sendo incluso a alteração de colunas de login_log.

11.10.2016 - 1.0.37
- Atualizando entidades relacionadas a uma conte de usuário.
	- Account: movendo atributos para outras classes de dependência e tipos de atributos alterados.
	- AccountGroup: dependência de Account para armazenar informações do grupo da conta.
	- Group: deverá representar um grupo de contas e suas propriedades.
	- Login: não deverá mais possuir Sex, pois isso não será definido na conta.
	- Pincode e Vip irão armazenar atributos que eram de Account respectivos a seus nomes.
- LoginClientService atualizado para funcionar com a rev36 onde FileDecriptorListener retorna booleano.
	- Corrigido ainda problema onde a senha raw era considerada como noRaw.

11.10.2016 - 1.0.36
- FileDescriptor corrigido para ser desligado do servidor adequadamente.
	- Algumas operações adicionais e lógicas corrigidas.
	- O método isConnected poderia causar um deadlock na Thread.
- FileDescriptorListener.onCall deve agora retornar um booleano.
	- Se for true significa que deverá remover o listener do FileDescriptor.

11.10.2016 - 1.0.35
- Removido um byte extra de NAME_LENGTH, PASSWORD_LENGTH e PINCODE_LENGTH por ser Java.
- Dois nóvos métodos para converter valores int em números do tipo byte e short.

11.10.2016 - 1.0.34
- Corrigindo ResponsePacket para que envie os pacotes ao cliente corretamente.
	- Os bytes não estavam indo invertidos, não eram enviados e não tinha o código do pacote.

08.10.2016 - 1.0.33
- Novo método que permite limpar uma string usando '\0' como delimitador.
	- Será usado por diversos pacotes que receber strings.
	- Todos os pacotes de Input atualizados para usar strclr.

08.10.2016 - 1.0.32
- Atualizações em FileDescriptor conforme PacketBuilder e correções:
	- O atributo flag de FileDescriptor não foi definido de forma correta.
		- São três atributos (byte) ao invés de um único atributo int.
	- PacketBuilder será usado para criar os pacotes de Input e Output.
	- Agora setFlag não será mais necessário, já que usa um FileDescriptorFlag.
	- Com PacketBuilder newInput e newOutput também não serão mais necessários.
	- Condição de validação no close e close não remove de SESSIONS.
	- Nova verificação para isConnected verificando se a sessão é válida.
- FileDescriptor.update atualizado conforme correções de flag e listener nulo.

08.10.2016 - 1.0.31
- JRagnarok atualizado para funcionar adequadamente ao atualizar Timer.
- Server.isState e construtor de InternetProtocol estavam com mal funcionamento.
- Tickers deverá sincronizar a coleção para evitar deadlock nas Threads.
- TimerSystem não irá sincronizar, não haverá necessidade.

08.10.2016 - 1.0.30
- Atualizando todos os pacotes até o momento conforme mudanças em JavaUtil rev115.
	- Essas mudanças irá permitir que os pacotes funcionem adequadamente.
	- Foi adicionado length() para definir se o pacote é estático ou dinâmico.
	- Complementando ainda os pacotes com toString afim de auxiliar no debug.

03.10.2016 - 1.0.29
- Documentação a parte para descrever os detalhes dos pacotes usados.
- RefuseLoginPacket renomado para RefuseLoginBytePacket conforme o tipo de dado.
- RefuseLoginIntPacket adicionado, funciona como RefuseLoginBytePacket porém com int.
- Adicionando AccountController para ser o controlador das contas no jogo.

07.09.2016 - 1.0.28
- Subindo atualização de algumas classes conforme rev26.
	- ClientCharServer, LoginSessionData, LoginServer, LoginCharacterService e LoginClientService.
- Novo método adicionado para LoginClientService parseRequestKey() e implementado authFailed().

07.09.2016 - 1.0.27
- Enviando InternetProtocol atualizado, faltou subir na rev26.
- ResponsePacket e ReceivePacket também faltaram ser atualizados.
- Pequenos ajustes no pacote RefuseLoginPacket e ReponseCharConnectPacket.

07.09.2016 - 1.0.26
- Documentando classes, atributos e métodos das classes que estão estabilizadas.
- TimerSystem atualizado para funcionar conforme a Orientação a Objetos.
	- Agora timers lista os temporizadores por ID e tickers ordena por tempo de expiração.
	- Para isso foi implementado uma classe para ordenar os temporizadores: Tickers.
	- Agora o tempo no servidor será trabalhado com int e não mais long.
- Corrigindo o nome de FileDecriptor que é FileDescriptor, listener corrigido também.

06.09.2016 - 1.0.25
- Especificando a Login.conf o nome de usuário e senha do servidor de acesso.
- Constante adicionada para definir o formato de datas padrão: DATE_FORMAT.
- Adicionando nova tabela usada e inicializando o nome das tabelas em Tables.
- Documentação de LoginLogService, LoginLog e ControllerLoginLog adicionada.
- Renomeando add() para insert() e correção na definição das tabelas: ControllerLoginLog.

05.09.2016 - 1.0.24
- Removendo classes Client e suas relações/filhas pois não serão mais usadas.

05.09.2016 - 1.0.23
- ConfigClientHash deverá passar a usar um ClientHashNode ao inves de Node.
- Atualizando LoginClientService, LoginCharService e LoginIpBanService.
	- Implementação de diversos métodos iniciais que serão necessários.
	- Os outros métodos serão implementados nas atualizações seguintes.
- Novo pacote para possuir todos os tipos de pacotes para comunicação cliente-servidor.

05.09.2016 - 1.0.22
- LoginServer atualizado conforme atualizações em LoginLogService.
	- Também foi adicionado a ele todos os serviços e os métodos getters.
- Adicionando LoginLog para armazenar dados de uma tabela do banco de dados.
- Será usado por LoginLogService passa a criar internamente LoginLog.
- ControllerLoginLog deverá receber LoginLog para atender como classe de controle.

05.09.2016 - 1.0.21
- Pequenos ajustes em CharServerType, ClientCharServer, ClientHash e Login.
- ClientType implementado, ainda será confirmado se estas são as verdadeiras variáveis.
- LoginSessionData passa a ser um Login, removendo alguns atributos que já possui em Login.
	- Atualizado o nome das variáveis estáticas e adicionado dois novos atributos para md5.

05.09.2016 - 1.0.20
- TimerSystem corrigido na forma como tick() deveria funcionar e adicionado novo atributo.
- ServerThread não será mais usado, o emulador não funciona com threads individuais.
	- Isso também iria resultar em um numero demasiado de threads e poderia privilegiar threads.
- Como os IPs são usados como int então InternetProtocol terá construtor por parâmetro int.
- Atualizando FileDecriptor para possuir uma lista com as instâncias internamente por static.
	- Adicionado ainda atributo para dar um timeout ao objeto para evitar ociosidade.

05.09.2016 - 1.0.19
- Pequenos ajustes em ConfigLoad e clear() deverá apenas substituir o map das configurações.
- Enviando também os arquivos contendo as mensagens dos três servidores.
	- As mensagens foram separadas em dois idiomas: português e inglês.

05.09.2016 - 1.0.18
- Sistema para leitura de arquivos com mensagens identificadas numericamente.

04.09.2016 - 1.0.17
- FileDecriptor e FileDecriptorListener adicionados.
	- Serão usados no lugar de Client e outras classes filhas.
- Server: adicionando método que permite obter o estado ou compará-lo.
	- Removido initClient, será usado um ServerThread junto de FileDecriptor.
- SocketParser agora irá receber um FileDecriptor ao invés de um Client.
- Agora get() passa a ser getString() em InternetProtocol para get() retornar int.

04.09.2016 - 1.0.16
- Subindo as constantes que não foram enviadas na rev15.
- Também está sendo adicionando alguns métodos utilitários usados ou que serão usados.

04.09.2016 - 1.0.15
- Adicionando todas as estruturas que serão usadas pelo servidor de acesso.
	- AccountState e ClientType terá suas enumerações adicionadsa em breve.

03.09.2016 - 1.0.14
- Implementação de LoginLogService com ControllerLoginLog.
- Atualizando LoginClientService conforme rev12.

03.09.2016 - 1.0.13
- Impossibilitando instâncias de:
	- JRagnarokConstants, JRagnarokLogListener e JRagnarokUtil.

03.09.2016 - 1.0.12
- AbstractController para criar todos os controles no emulador.
- ClientServer adicionado para representar os servidores.
- Pequenos ajustes entre Client, ClientPlayer e ClientCharServer.
- Server irá usar ClientPlayer ao invés de Client na Thread criada.
	- Também foi adicionado Client para os servidores entrarem no log.
- ServerService aprimorado durante o getConnection() para validar conexão.

03.09.2016 - 1.0.11
- Adicionando todos os serviços que compõe projedo do servidor de acesso.
	- Irá usar LoginServerService como base para criação dos serviços abaixo:
	- Serviços para: servidor de personagem, cliente, ip ban, log.
- LoginServer atualizado conforme os serviços adicionados.
	- Adicionando ainda alguns temporizadores e processos para iniciar.
		- A maioria ainda será implementado nas próximas revisões.

03.09.2016 - 1.0.10
- Dois tipos de clientes adicionado: ClientCharServer e ClientPlayer.
	- ClientCharServer representa os servidores de personagens disponíveis.
	- ClientPlayer um jogador que já solicitou a conexão com o servidor.	
		- Ainda há atributos para ser implementado mas será usado.
- ServerService será usado para criar os diversos serviços internos do emulador.

03.09.2016 - 1.0.9
- Removido dispatchSocket() de Server, agora irá usar uma interface SocketParser.
- Pequenos ajustes em TimerSystem para evitar NullPointerExceptions e chamados desnecessários.

02.09.2016 - 1.0.8
- JRagnarokUtil recebe um novo método que permite liberar memória de objetos não usados.
	- Utiliza o próprio Garbage Collector do java e registra uma mensagem do espaço liberado.
- InternetProtocol agora irá permitir uma nova instância de si a partir de um Socket.
- Sistema de temporizadores adicionado como TimerSystem tendo Timer como temporizador.

02.09.2016 - 1.0.7
- Problema ao usar : em uma configuração resolvido em ConfigLoad.
- Outros tipos de configurações podem ser criadas, como por exemplo ConfigIP.
	- Deve ser especificado setObject quando receber um string para funcionar.
- Configuração login.ip_sync_interval não estava com um valor definido.
- Porta de conexão agora é obtido por método para ser especificado nas configurações.
- Atualizando ServerConfig para funcionar com os tipos de configurações: ConfigObject.
- ConfigClientHash e ConfigIP adicionados para especificar configurações de objetos.
	- Respectivas classes estáticas ConfigClient e ConfigLogin atualizadas.
- Listando em LoginConfig as configurações necessárias para LoginServer funcionar.
- LoginServer agora irá ler os arquivos de configurações e assumir seus valores.

02.09.2016 - 1.0.6
- Adicionando diversas classes contendo objetos para armazenar configurações.
- JRagnarokConstants irá armazenar todas as constantes que forem necessárias de uso geral.
- LoginServer irá definir algumas das configurações padrões quando for criado.

31.08.2016 - 1.0.5
- Chamado dos métodos para funcionamento da aplicação para registrar informações (logs).
- ServerConfig irá armazenar configurações e possui método para inicializá-las, definir as existentes.
	- Para cada servidor foi criado um que segue como: LoginConfig, CharConfig e MapConfig.
- Agora Server irá possuir configurações com ServerConfig e conexão com o banco de dados por MySQL.
	- Adicionando algumas mensagens através do sistema de logs para algumas funções.
	- Separando algumas operações em create() para métodos initThread() e initSocket().
	- Novos métodos init*() adicionados para realizar outras funções:
		- Inicialização das configurações por initConfigs().
		- Inicialização da conexão com o banco de dados MySQL por initSqlConnection().
		- Inicialização do temporizador (ainda não estruturado) por initTimer().

31.08.2016 - 1.0.4
- Sistema para leitura de arquivos contendo configurações: ConfigLoad.
	- As configurações são definidas por Config e podem ser ConfigString, ConfigInt e ConfigBoolean.
- JRagnarokLogListener adicionado para repassar os registros (logs) para o console do Java.
- JRagnarokUtil irá conter diversos métodos estáticos para facilitar as codificações.

31.08.2016 - 1.0.3
- Movendo Server, ServerListener e ServerState para um sub pacote 'server'.
	- Outras classes gerais de todos os servidores serão adicionadas aqui.
	- No pacote raiz serão adicionadas classes gerais do emulador ao invés dos servidores.

28.08.2016 - 1.0.2
- Enviando estrutura básica para a criação dos três servidores com ServerSocket.
	- Foi utilizado ainda ServerListener para permitir algumas operações em determinados momentos.
	- Algumas funcionalidades e mensagens ainda deverão ser implementadas para melhor acompanhamento.