24.10.2016 - 1.0.50
- TimerSystem agora irá usar TimerMap para mapear a indexar os temporizadores.
	- Tickers foi unido a TimerMap afim de seguir a OO.
- TimerListener deverá ser encarregado de saber seu próprio nome.
- Novos métodos para trabalhar com tempos em milissegundos, JRagnarokUtil.
- Nome dos atributos e definições padrões ao nome das tabelas atualizados, Tables.
- Removendo algumas constantes que não serão mais usadas em FileDescriptor.
- Atualizando listeners que usavam TimerListener para implementar getName e toString.

24.10.2016 - 1.0.49
- ClientHash atualizado para que efetua uma comparação de hash e não de objeto.
- ClientType não é a definição do idioma do cliente, aparentemente não há definições.
	- Será usado 22 como padrão, já que o cliente passou esse valor.
- LoginSeed agora irá gerar as duas seeds conforme esperado.
- Ajustando LoginSessionData conforme a OO, usando Group.

24.10.2016 - 1.0.48
- Enumeração de AccountState definido e testado, parse ajustado conforme mudanças.

24.10.2016 - 1.0.47
- Removendo estruturadas antigas das entidades, já que foram realocadas.
- LoginServer agora irá usar Login para registrar o seu acesso.
- Também foi corrigido o problema na criação dos servidos de LoginServer.
- As configurações não estavam sendo lidas corretamente em LoginServer.
- Pequenas correções de inicializações e restrições nos setters das entidades.

24.10.2016 - 1.0.46
- FileDescriptor agora permite adicionar ações para serem executados por todos fd.
	- As ações serão executadas uma única vez.
	- FileDescriptorAction será usado para que isso possa ser possível.

24.10.2016 - 1.0.45
- Problema onde ServerService causa NullPointerExceptions devido a falha de conexão com o banco de dados.
- Ajuste temporário para o problema de timezone do servidor com o banco de dados.
- Configuração de sql.legacydatetime adicionado para quando se conectar ao MySQL.

24.10.2016 - 1.0.44
- Atualizando algumas das configurações:
	- Versão do cliente de 50 para 55.
	- Renomeando min_group para min_group_to_connect.
	- Adicionando a opção de legacydatetime para conectar-se com o MySQL.
	- System.conf adicionado para configurações gerais entre os servidores.
- CharConfig e MapConfig atualizado para carregar ConfigFiles e ConfigSQL.
	- LoginConfig também passa por parte das mudanças acima.

18.10.2016 - 1.0.43
- ControllerLoginLog renomado para LoginLogController e movido para login.controllers.

18.10.2016 - 1.0.42
- Enviando entidades e classes para armazenar comandos e permissões dos grupos de jogadores.

18.10.2016 - 1.0.41
- Entidades removidas de login.services para login.entities.
- As classes de controle e DAO ficarão alocadas em login.controllers.
- Enviando entidades atualizadas conforme as mudanças já feitas no banco de dados.
- Os servidores terão DAO e Controller:
	- DAO irá trabalhar com os objetos e a conexão com o banco de dados.
	- Controller irá funcionar como cache do banco de dados.

18.10.2016 - 1.0.40
- Renomeando algumas tabelas para nomes mais adequados a suas finalidades.
- Comandos e permissões listados em um grupo sempre estarão habilidades (enabled não é necessário).
- Renomeado um atributo de accounts para ficar com cara de banco de dados e char_slots removido.

18.10.2016 - 1.0.39
- Removendo as tabelas anteriores do banco de dados, diversos problemas encontrados.

11.10.2016 - 1.0.38
- Enviando arquivo para atualizar o banco de dados SQL com as novas tabelas.
	- Também está sendo incluso a alteração de colunas de login_log.

11.10.2016 - 1.0.37
- Atualizando entidades relacionadas a uma conte de usuário.
	- Account: movendo atributos para outras classes de dependência e tipos de atributos alterados.
	- AccountGroup: dependência de Account para armazenar informações do grupo da conta.
	- Group: deverá representar um grupo de contas e suas propriedades.
	- Login: não deverá mais possuir Sex, pois isso não será definido na conta.
	- Pincode e Vip irão armazenar atributos que eram de Account respectivos a seus nomes.
- LoginClientService atualizado para funcionar com a rev36 onde FileDecriptorListener retorna booleano.
	- Corrigido ainda problema onde a senha raw era considerada como noRaw.

11.10.2016 - 1.0.36
- FileDescriptor corrigido para ser desligado do servidor adequadamente.
	- Algumas operações adicionais e lógicas corrigidas.
	- O método isConnected poderia causar um deadlock na Thread.
- FileDescriptorListener.onCall deve agora retornar um booleano.
	- Se for true significa que deverá remover o listener do FileDescriptor.

11.10.2016 - 1.0.35
- Removido um byte extra de NAME_LENGTH, PASSWORD_LENGTH e PINCODE_LENGTH por ser Java.
- Dois nóvos métodos para converter valores int em números do tipo byte e short.

11.10.2016 - 1.0.34
- Corrigindo ResponsePacket para que envie os pacotes ao cliente corretamente.
	- Os bytes não estavam indo invertidos, não eram enviados e não tinha o código do pacote.

08.10.2016 - 1.0.33
- Novo método que permite limpar uma string usando '\0' como delimitador.
	- Será usado por diversos pacotes que receber strings.
	- Todos os pacotes de Input atualizados para usar strclr.

08.10.2016 - 1.0.32
- Atualizações em FileDescriptor conforme PacketBuilder e correções:
	- O atributo flag de FileDescriptor não foi definido de forma correta.
		- São três atributos (byte) ao invés de um único atributo int.
	- PacketBuilder será usado para criar os pacotes de Input e Output.
	- Agora setFlag não será mais necessário, já que usa um FileDescriptorFlag.
	- Com PacketBuilder newInput e newOutput também não serão mais necessários.
	- Condição de validação no close e close não remove de SESSIONS.
	- Nova verificação para isConnected verificando se a sessão é válida.
- FileDescriptor.update atualizado conforme correções de flag e listener nulo.

08.10.2016 - 1.0.31
- JRagnarok atualizado para funcionar adequadamente ao atualizar Timer.
- Server.isState e construtor de InternetProtocol estavam com mal funcionamento.
- Tickers deverá sincronizar a coleção para evitar deadlock nas Threads.
- TimerSystem não irá sincronizar, não haverá necessidade.

08.10.2016 - 1.0.30
- Atualizando todos os pacotes até o momento conforme mudanças em JavaUtil rev115.
	- Essas mudanças irá permitir que os pacotes funcionem adequadamente.
	- Foi adicionado length() para definir se o pacote é estático ou dinâmico.
	- Complementando ainda os pacotes com toString afim de auxiliar no debug.

03.10.2016 - 1.0.29
- Documentação a parte para descrever os detalhes dos pacotes usados.
- RefuseLoginPacket renomado para RefuseLoginBytePacket conforme o tipo de dado.
- RefuseLoginIntPacket adicionado, funciona como RefuseLoginBytePacket porém com int.
- Adicionando AccountController para ser o controlador das contas no jogo.

07.09.2016 - 1.0.28
- Subindo atualização de algumas classes conforme rev26.
	- ClientCharServer, LoginSessionData, LoginServer, LoginCharacterService e LoginClientService.
- Novo método adicionado para LoginClientService parseRequestKey() e implementado authFailed().

07.09.2016 - 1.0.27
- Enviando InternetProtocol atualizado, faltou subir na rev26.
- ResponsePacket e ReceivePacket também faltaram ser atualizados.
- Pequenos ajustes no pacote RefuseLoginPacket e ReponseCharConnectPacket.

07.09.2016 - 1.0.26
- Documentando classes, atributos e métodos das classes que estão estabilizadas.
- TimerSystem atualizado para funcionar conforme a Orientação a Objetos.
	- Agora timers lista os temporizadores por ID e tickers ordena por tempo de expiração.
	- Para isso foi implementado uma classe para ordenar os temporizadores: Tickers.
	- Agora o tempo no servidor será trabalhado com int e não mais long.
- Corrigindo o nome de FileDecriptor que é FileDescriptor, listener corrigido também.

06.09.2016 - 1.0.25
- Especificando a Login.conf o nome de usuário e senha do servidor de acesso.
- Constante adicionada para definir o formato de datas padrão: DATE_FORMAT.
- Adicionando nova tabela usada e inicializando o nome das tabelas em Tables.
- Documentação de LoginLogService, LoginLog e ControllerLoginLog adicionada.
- Renomeando add() para insert() e correção na definição das tabelas: ControllerLoginLog.

05.09.2016 - 1.0.24
- Removendo classes Client e suas relações/filhas pois não serão mais usadas.

05.09.2016 - 1.0.23
- ConfigClientHash deverá passar a usar um ClientHashNode ao inves de Node.
- Atualizando LoginClientService, LoginCharService e LoginIpBanService.
	- Implementação de diversos métodos iniciais que serão necessários.
	- Os outros métodos serão implementados nas atualizações seguintes.
- Novo pacote para possuir todos os tipos de pacotes para comunicação cliente-servidor.

05.09.2016 - 1.0.22
- LoginServer atualizado conforme atualizações em LoginLogService.
	- Também foi adicionado a ele todos os serviços e os métodos getters.
- Adicionando LoginLog para armazenar dados de uma tabela do banco de dados.
- Será usado por LoginLogService passa a criar internamente LoginLog.
- ControllerLoginLog deverá receber LoginLog para atender como classe de controle.

05.09.2016 - 1.0.21
- Pequenos ajustes em CharServerType, ClientCharServer, ClientHash e Login.
- ClientType implementado, ainda será confirmado se estas são as verdadeiras variáveis.
- LoginSessionData passa a ser um Login, removendo alguns atributos que já possui em Login.
	- Atualizado o nome das variáveis estáticas e adicionado dois novos atributos para md5.

05.09.2016 - 1.0.20
- TimerSystem corrigido na forma como tick() deveria funcionar e adicionado novo atributo.
- ServerThread não será mais usado, o emulador não funciona com threads individuais.
	- Isso também iria resultar em um numero demasiado de threads e poderia privilegiar threads.
- Como os IPs são usados como int então InternetProtocol terá construtor por parâmetro int.
- Atualizando FileDecriptor para possuir uma lista com as instâncias internamente por static.
	- Adicionado ainda atributo para dar um timeout ao objeto para evitar ociosidade.

05.09.2016 - 1.0.19
- Pequenos ajustes em ConfigLoad e clear() deverá apenas substituir o map das configurações.
- Enviando também os arquivos contendo as mensagens dos três servidores.
	- As mensagens foram separadas em dois idiomas: português e inglês.

05.09.2016 - 1.0.18
- Sistema para leitura de arquivos com mensagens identificadas numericamente.

04.09.2016 - 1.0.17
- FileDecriptor e FileDecriptorListener adicionados.
	- Serão usados no lugar de Client e outras classes filhas.
- Server: adicionando método que permite obter o estado ou compará-lo.
	- Removido initClient, será usado um ServerThread junto de FileDecriptor.
- SocketParser agora irá receber um FileDecriptor ao invés de um Client.
- Agora get() passa a ser getString() em InternetProtocol para get() retornar int.

04.09.2016 - 1.0.16
- Subindo as constantes que não foram enviadas na rev15.
- Também está sendo adicionando alguns métodos utilitários usados ou que serão usados.

04.09.2016 - 1.0.15
- Adicionando todas as estruturas que serão usadas pelo servidor de acesso.
	- AccountState e ClientType terá suas enumerações adicionadsa em breve.

03.09.2016 - 1.0.14
- Implementação de LoginLogService com ControllerLoginLog.
- Atualizando LoginClientService conforme rev12.

03.09.2016 - 1.0.13
- Impossibilitando instâncias de:
	- JRagnarokConstants, JRagnarokLogListener e JRagnarokUtil.

03.09.2016 - 1.0.12
- AbstractController para criar todos os controles no emulador.
- ClientServer adicionado para representar os servidores.
- Pequenos ajustes entre Client, ClientPlayer e ClientCharServer.
- Server irá usar ClientPlayer ao invés de Client na Thread criada.
	- Também foi adicionado Client para os servidores entrarem no log.
- ServerService aprimorado durante o getConnection() para validar conexão.

03.09.2016 - 1.0.11
- Adicionando todos os serviços que compõe projedo do servidor de acesso.
	- Irá usar LoginServerService como base para criação dos serviços abaixo:
	- Serviços para: servidor de personagem, cliente, ip ban, log.
- LoginServer atualizado conforme os serviços adicionados.
	- Adicionando ainda alguns temporizadores e processos para iniciar.
		- A maioria ainda será implementado nas próximas revisões.

03.09.2016 - 1.0.10
- Dois tipos de clientes adicionado: ClientCharServer e ClientPlayer.
	- ClientCharServer representa os servidores de personagens disponíveis.
	- ClientPlayer um jogador que já solicitou a conexão com o servidor.	
		- Ainda há atributos para ser implementado mas será usado.
- ServerService será usado para criar os diversos serviços internos do emulador.

03.09.2016 - 1.0.9
- Removido dispatchSocket() de Server, agora irá usar uma interface SocketParser.
- Pequenos ajustes em TimerSystem para evitar NullPointerExceptions e chamados desnecessários.

02.09.2016 - 1.0.8
- JRagnarokUtil recebe um novo método que permite liberar memória de objetos não usados.
	- Utiliza o próprio Garbage Collector do java e registra uma mensagem do espaço liberado.
- InternetProtocol agora irá permitir uma nova instância de si a partir de um Socket.
- Sistema de temporizadores adicionado como TimerSystem tendo Timer como temporizador.

02.09.2016 - 1.0.7
- Problema ao usar : em uma configuração resolvido em ConfigLoad.
- Outros tipos de configurações podem ser criadas, como por exemplo ConfigIP.
	- Deve ser especificado setObject quando receber um string para funcionar.
- Configuração login.ip_sync_interval não estava com um valor definido.
- Porta de conexão agora é obtido por método para ser especificado nas configurações.
- Atualizando ServerConfig para funcionar com os tipos de configurações: ConfigObject.
- ConfigClientHash e ConfigIP adicionados para especificar configurações de objetos.
	- Respectivas classes estáticas ConfigClient e ConfigLogin atualizadas.
- Listando em LoginConfig as configurações necessárias para LoginServer funcionar.
- LoginServer agora irá ler os arquivos de configurações e assumir seus valores.

02.09.2016 - 1.0.6
- Adicionando diversas classes contendo objetos para armazenar configurações.
- JRagnarokConstants irá armazenar todas as constantes que forem necessárias de uso geral.
- LoginServer irá definir algumas das configurações padrões quando for criado.

31.08.2016 - 1.0.5
- Chamado dos métodos para funcionamento da aplicação para registrar informações (logs).
- ServerConfig irá armazenar configurações e possui método para inicializá-las, definir as existentes.
	- Para cada servidor foi criado um que segue como: LoginConfig, CharConfig e MapConfig.
- Agora Server irá possuir configurações com ServerConfig e conexão com o banco de dados por MySQL.
	- Adicionando algumas mensagens através do sistema de logs para algumas funções.
	- Separando algumas operações em create() para métodos initThread() e initSocket().
	- Novos métodos init*() adicionados para realizar outras funções:
		- Inicialização das configurações por initConfigs().
		- Inicialização da conexão com o banco de dados MySQL por initSqlConnection().
		- Inicialização do temporizador (ainda não estruturado) por initTimer().

31.08.2016 - 1.0.4
- Sistema para leitura de arquivos contendo configurações: ConfigLoad.
	- As configurações são definidas por Config e podem ser ConfigString, ConfigInt e ConfigBoolean.
- JRagnarokLogListener adicionado para repassar os registros (logs) para o console do Java.
- JRagnarokUtil irá conter diversos métodos estáticos para facilitar as codificações.

31.08.2016 - 1.0.3
- Movendo Server, ServerListener e ServerState para um sub pacote 'server'.
	- Outras classes gerais de todos os servidores serão adicionadas aqui.
	- No pacote raiz serão adicionadas classes gerais do emulador ao invés dos servidores.

28.08.2016 - 1.0.2
- Enviando estrutura básica para a criação dos três servidores com ServerSocket.
	- Foi utilizado ainda ServerListener para permitir algumas operações em determinados momentos.
	- Algumas funcionalidades e mensagens ainda deverão ser implementadas para melhor acompanhamento.